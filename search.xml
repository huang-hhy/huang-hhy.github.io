<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git</title>
    <url>/2020/05/30/Git/</url>
    <content><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱名&quot;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd 到你想要去的文件夹下 如：cd www</span><br><span class="line">用 mkdir 创建文件夹: 如 mkdir testgit</span><br><span class="line">再用cd去到刚刚新建的文件夹下 :如 cd testgit</span><br><span class="line">用pwd查看本来目录 ：如 pwd</span><br><span class="line"></span><br><span class="line">通过git init把这个目录变成git可以管理的仓库 ：如 git init</span><br></pre></td></tr></table></figure>



<h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">首先在版本库目录中创建一个记事本，并写上内容 ：如  read.txt ,内容 111</span><br><span class="line">使用git add 文件名 添加到暂存区 ：如git add read.txt</span><br><span class="line">使用 git commit告诉git把文件添加到创库,-m表示你想描述的内容 ：如 git commit -m &quot;&quot;  </span><br><span class="line">查看是否还有文件未提交： git status</span><br><span class="line">查看文件改变了什么内容： git diff read.txt(文件名)</span><br></pre></td></tr></table></figure>



<h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看历史记录：git log</span><br><span class="line">查看少量记录：git log --pretty&#x3D;oneline</span><br><span class="line">回退到上一个版本：git reset--hard HEAD^</span><br><span class="line">回退到上上一个版本：git reset--hard HEAD^^</span><br><span class="line">回退到第一百个版本：git reset--hard HEAD~100</span><br><span class="line">查看信息：cat read.txt</span><br><span class="line">获取版本号：git reflog</span><br><span class="line">回退到最新版本（或指定版本）：git reset --rd 版本号</span><br><span class="line">追加信息：echo &quot;内容&quot; &gt;&gt; 文件名</span><br><span class="line">清空信息：clear</span><br></pre></td></tr></table></figure>



<h3 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、在目录下创建一个base.txt并添加一些内容，用git status查看有一个暂存文件</span><br><span class="line">2、用git add base.txt命令后没有站存文件,用git commit -m命令提交</span><br><span class="line">3、在base.txt里新增一些内容,用git status查看有一个未站存文件</span><br><span class="line">4、用git add base.txt后，再用git status 查看没有站存文件</span><br><span class="line">5、问题：此时想把3中新增的文件删除怎么办，也就是添加到站存区但是还没有用commit提交</span><br><span class="line">6、用git reset HEAD base.txt即可，此时再去看已经删除3中新增的内容</span><br><span class="line">7、但是用git status查看3中新增内容在站存区还有，用git checkout -- base.txt即可清除</span><br><span class="line">8、此时又新增一个内容，用git status查看有一个站存文件</span><br><span class="line">9、用git add base.txt添加到站存中，再用git commit -m提交完成</span><br><span class="line">10、问题：想把8中新增的内容删除应该如何做，也就是以添加到站存区和已经用commit提交了</span><br><span class="line">11、首先用git log命令查看版本号，再用git reset --hard 版本号 即可</span><br><span class="line">12、问题：想把整个base.txt删除如何做</span><br><span class="line">13、用 git rm base.txt即可删除，此时文件已经不存在硬盘上</span><br><span class="line">14、但是用git status 查看还存在站存区中，用git commit -m提交之后就可以了</span><br></pre></td></tr></table></figure>



<h3 id="克隆创库：克隆远程创库的信息到本地创库"><a href="#克隆创库：克隆远程创库的信息到本地创库" class="headerlink" title="克隆创库：克隆远程创库的信息到本地创库"></a>克隆创库：克隆远程创库的信息到本地创库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：git clone git@github.com:stylerdemo&#x2F;demo4.git</span><br><span class="line">步奏：</span><br><span class="line">1、打开github，新建一个远程创库，起一个名字，确定</span><br><span class="line">2、用ls -a检查本地是否已新建有创库，如没有则可以新建，复制里面的地址，到git里面用git clone 地址。</span><br><span class="line">3、cd到对应的目录下，用git status查看是否新建成功</span><br><span class="line">4、在里面新建一个文本，并添加一些内容，如： echo &quot;内容&quot; &gt;&gt; 文本文件，用 cat 文本文件 查看内容</span><br><span class="line">4-1、向文本里添加内容，如：echo &quot;123&quot; text</span><br><span class="line">5、用git status查看没有追踪到，需要用命令 git add 文本文件，git commit -m 提交到本地创库</span><br><span class="line">6、通过 git push提交回远程创库</span><br></pre></td></tr></table></figure>



<h3 id="标签管理：每更换一个版本，都用一个标签来对应"><a href="#标签管理：每更换一个版本，都用一个标签来对应" class="headerlink" title="标签管理：每更换一个版本，都用一个标签来对应"></a>标签管理：每更换一个版本，都用一个标签来对应</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看所有标签：git tag</span><br><span class="line">创建标签： git tag name</span><br><span class="line">指定提交信息： git tag -a name -m &quot;comment&quot;</span><br><span class="line">删除标签： git tag -d name</span><br><span class="line">标签发布： git push origin name</span><br><span class="line"></span><br><span class="line">步奏：</span><br><span class="line">1、已经有一个文件关联到github上，里面有个text文本</span><br><span class="line">2、新增一些内容到text上，如：echo &quot;123&quot; &gt;&gt; text</span><br><span class="line">3、把text添加到暂存区git add text,再放到本地创库git commit -m</span><br><span class="line">4、用git status查看成功之后，用git push 添加到远程创库</span><br><span class="line">5、用git tag查看有没有标签，没有用 git tag 标签名 来创建标签，再用git tag查看标签是否存在</span><br><span class="line">6、再用 git push origin 标签名 命令来发布到远程创库,去到github相应的地方即可查看到</span><br></pre></td></tr></table></figure>



<h3 id="分支管理：可以在原来的分支里创建自己的分支，而且互不影响，还可以合并"><a href="#分支管理：可以在原来的分支里创建自己的分支，而且互不影响，还可以合并" class="headerlink" title="分支管理：可以在原来的分支里创建自己的分支，而且互不影响，还可以合并"></a>分支管理：可以在原来的分支里创建自己的分支，而且互不影响，还可以合并</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">步奏：</span><br><span class="line">1、新建一个本地目录，里面有一个branck.txt,如：branck-demo,用ls -a查看有没有本地仓库也就是.git文件，</span><br><span class="line">2、用git init 初始化仓库，为branck.txt添加内容，如：echo &quot;111&quot; &gt;&gt; branck.txt</span><br><span class="line">3、把文件添加到暂存区里 git add branck.txt,再添加到本地仓库，git commit -m,再用git status查看状态</span><br><span class="line">4、新建一个分支，git branck featrue_x,通过git branck查看所有分支，*表示在哪个分支上</span><br><span class="line">5、切换到featrue_x分支上：git checkout featrue_x,再用git branck查看在哪个分支上</span><br><span class="line">6、用featrue_x分支在branck.txt上添加多一条内容，如：echo &#39;222&#39; &gt;&gt; branck.txt</span><br><span class="line">7、把文件添加到暂存区里 git add branck.txt,再添加到本地仓库，git commit -m,再用git status查看状态</span><br><span class="line">8、如想合并分支，先切换到master,如：git checkout master</span><br><span class="line">9、合并分支，git merge featrue_x,用cat branck.txt命令查看内容是否成功</span><br><span class="line">10、删除分支：git branck -d featrue_x,再用git branck查看是否删除成功</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>jquery</title>
    <url>/2020/05/30/jquery/</url>
    <content><![CDATA[<h1 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h1><h1 id="jQuery-教程"><a href="#jQuery-教程" class="headerlink" title="jQuery 教程"></a>jQuery 教程</h1><p>jQuery 语法是为 HTML 元素的选取编制的，可以对元素执行某些操作。</p>
<p>基础语法是：<em>$(selector).action()</em></p>
<ul>
<li>美元符号定义 jQuery</li>
<li>选择符（selector）“查询”和“查找” HTML 元素</li>
<li>jQuery 的 action() 执行对元素的操作</li>
</ul>
<a id="more"></a>

<h3 id="文档就绪函数"><a href="#文档就绪函数" class="headerlink" title="文档就绪函数"></a>文档就绪函数</h3><p>您也许已经注意到在我们的实例中的所有 jQuery 函数位于一个 document ready 函数中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span><br><span class="line"></span><br><span class="line">--- jQuery functions go here ----</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h1 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h1><h3 id="jQuery-选择器-1"><a href="#jQuery-选择器-1" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h3><p>在前面的章节中，我们展示了一些有关如何选取 HTML 元素的实例。</p>
<p>关键点是学习 jQuery 选择器是如何准确地选取您希望应用效果的元素。</p>
<p>jQuery 元素选择器和属性选择器允许您通过标签名、属性名或内容对 HTML 元素进行选择。</p>
<p>选择器允许您对 HTML 元素组或单个元素进行操作。</p>
<p>在 HTML DOM 术语中：</p>
<p>选择器允许您对 DOM 元素组或单个 DOM 节点进行操作。</p>
<h3 id="jQuery-元素选择器"><a href="#jQuery-元素选择器" class="headerlink" title="jQuery 元素选择器"></a>jQuery 元素选择器</h3><p>jQuery 使用 CSS 选择器来选取 HTML 元素。</p>
<p>$(“p”) 选取 <p> 元素。</p>
<p>$(“p.intro”) 选取所有 class=”intro” 的 <p> 元素。</p>
<p>$(“p#demo”) 选取所有 id=”demo” 的 <p> 元素。</p>
<h3 id="jQuery-属性选择器"><a href="#jQuery-属性选择器" class="headerlink" title="jQuery 属性选择器"></a>jQuery 属性选择器</h3><p>jQuery 使用 XPath 表达式来选择带有给定属性的元素。</p>
<p>$(“[href]”) 选取所有带有 href 属性的元素。</p>
<p>$(“[href=’#’]”) 选取所有带有 href 值等于 “#” 的元素。</p>
<p>$(“[href!=’#’]”) 选取所有带有 href 值不等于 “#” 的元素。</p>
<p>$(“[href$=’.jpg’]”) 选取所有 href 值以 “.jpg” 结尾的元素。</p>
<h3 id="jQuery-CSS-选择器"><a href="#jQuery-CSS-选择器" class="headerlink" title="jQuery CSS 选择器"></a>jQuery CSS 选择器</h3><p>jQuery CSS 选择器可用于改变 HTML 元素的 CSS 属性。</p>
<h1 id="jQuery-事件"><a href="#jQuery-事件" class="headerlink" title="jQuery 事件"></a>jQuery 事件</h1><h2 id="jQuery-事件函数"><a href="#jQuery-事件函数" class="headerlink" title="jQuery 事件函数"></a>jQuery 事件函数</h2><p>jQuery 事件处理方法是 jQuery 中的核心函数。</p>
<p>事件处理程序指的是当 HTML 中发生某些事件时所调用的方法。术语由事件“触发”（或“激发”）经常会被使用。</p>
<p>通常会把 jQuery 代码放到 <head>部分的事件处理方法中：</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;p&quot;).hide();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;This is a heading&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;p&gt;This is a paragraph.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;This is another paragraph.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;Click me&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>











<h2 id="jQuery-效果"><a href="#jQuery-效果" class="headerlink" title="jQuery 效果"></a>jQuery 效果</h2><h3 id="jQuery-效果-隐藏：hide-、和显示：show-、和切换：toggle"><a href="#jQuery-效果-隐藏：hide-、和显示：show-、和切换：toggle" class="headerlink" title="jQuery 效果 - 隐藏：hide()、和显示：show()、和切换：toggle()"></a>jQuery 效果 - 隐藏：hide()、和显示：show()、和切换：toggle()</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;#hide&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).hide();</span><br><span class="line">  &#125;);</span><br><span class="line">  $(&quot;#show&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).show();</span><br><span class="line">  &#125;);</span><br><span class="line">   $(&quot;#toggle&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).toggle();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id&#x3D;&quot;p1&quot;&gt;如果点击“隐藏”按钮，我就会消失。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;hide&quot; type&#x3D;&quot;button&quot;&gt;隐藏&lt;&#x2F;button&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;show&quot; type&#x3D;&quot;button&quot;&gt;显示&lt;&#x2F;button&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;toggle&quot; type&#x3D;&quot;button&quot;&gt;切换&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h1 id="jQuery-效果-淡入淡出"><a href="#jQuery-效果-淡入淡出" class="headerlink" title="jQuery 效果 - 淡入淡出"></a>jQuery 效果 - 淡入淡出</h1><h4 id="fadeIn-用于淡入已隐藏的元素。"><a href="#fadeIn-用于淡入已隐藏的元素。" class="headerlink" title="fadeIn() 用于淡入已隐藏的元素。"></a>fadeIn() 用于淡入已隐藏的元素。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#div1&quot;).fadeIn();</span><br><span class="line">    $(&quot;#div2&quot;).fadeIn(&quot;slow&quot;);</span><br><span class="line">    $(&quot;#div3&quot;).fadeIn(3000);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;演示带有不同参数的 fadeIn() 方法。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;点击这里，使三个矩形淡入&lt;&#x2F;button&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot; style&#x3D;&quot;width:80px;height:80px;display:none;background-color:red;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div2&quot; style&#x3D;&quot;width:80px;height:80px;display:none;background-color:green;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div3&quot; style&#x3D;&quot;width:80px;height:80px;display:none;background-color:blue;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="fadeOut-方法用于淡出可见元素。"><a href="#fadeOut-方法用于淡出可见元素。" class="headerlink" title="fadeOut() 方法用于淡出可见元素。"></a>fadeOut() 方法用于淡出可见元素。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#div1&quot;).fadeOut();</span><br><span class="line">    $(&quot;#div2&quot;).fadeOut(&quot;slow&quot;);</span><br><span class="line">    $(&quot;#div3&quot;).fadeOut(3000);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;演示带有不同参数的 fadeOut() 方法。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;点击这里，使三个矩形淡出&lt;&#x2F;button&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot; style&#x3D;&quot;width:80px;height:80px;background-color:red;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div2&quot; style&#x3D;&quot;width:80px;height:80px;background-color:green;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div3&quot; style&#x3D;&quot;width:80px;height:80px;background-color:blue;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="fadeToggle-方法可以在-fadeIn-与-fadeOut-方法之间进行切换。"><a href="#fadeToggle-方法可以在-fadeIn-与-fadeOut-方法之间进行切换。" class="headerlink" title="fadeToggle() 方法可以在 fadeIn() 与 fadeOut() 方法之间进行切换。"></a>fadeToggle() 方法可以在 fadeIn() 与 fadeOut() 方法之间进行切换。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#div1&quot;).fadeToggle();</span><br><span class="line">    $(&quot;#div2&quot;).fadeToggle(&quot;slow&quot;);</span><br><span class="line">    $(&quot;#div3&quot;).fadeToggle(3000);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;演示带有不同参数的 fadeToggle() 方法。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;点击这里，使三个矩形淡入淡出&lt;&#x2F;button&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot; style&#x3D;&quot;width:80px;height:80px;background-color:red;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div2&quot; style&#x3D;&quot;width:80px;height:80px;background-color:green;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div3&quot; style&#x3D;&quot;width:80px;height:80px;background-color:blue;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="fadeTo-方法允许渐变为给定的不透明度（值介于-0-与-1-之间）。"><a href="#fadeTo-方法允许渐变为给定的不透明度（值介于-0-与-1-之间）。" class="headerlink" title="fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。"></a>fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#div1&quot;).fadeTo(&quot;slow&quot;,0.15);</span><br><span class="line">    $(&quot;#div2&quot;).fadeTo(&quot;slow&quot;,0.4);</span><br><span class="line">    $(&quot;#div3&quot;).fadeTo(&quot;slow&quot;,0.7);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;演示带有不同参数的 fadeTo() 方法。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;点击这里，使三个矩形淡出&lt;&#x2F;button&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot; style&#x3D;&quot;width:80px;height:80px;background-color:red;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div2&quot; style&#x3D;&quot;width:80px;height:80px;background-color:green;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;div3&quot; style&#x3D;&quot;width:80px;height:80px;background-color:blue;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h1 id="jQuery-效果-滑动"><a href="#jQuery-效果-滑动" class="headerlink" title="jQuery 效果 - 滑动"></a>jQuery 效果 - 滑动</h1><h4 id="slideDown-方法用于向下滑动元素。"><a href="#slideDown-方法用于向下滑动元素。" class="headerlink" title="slideDown() 方法用于向下滑动元素。"></a>slideDown() 方法用于向下滑动元素。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt; </span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;.flip&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;.panel&quot;).slideDown(&quot;slow&quot;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">div.panel,p.flip</span><br><span class="line">&#123;</span><br><span class="line">margin:0px;</span><br><span class="line">padding:5px;</span><br><span class="line">text-align:center;</span><br><span class="line">background:#e5eecc;</span><br><span class="line">border:solid 1px #c3c3c3;</span><br><span class="line">&#125;</span><br><span class="line">div.panel</span><br><span class="line">&#123;</span><br><span class="line">height:120px;</span><br><span class="line">display:none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"> </span><br><span class="line">&lt;body&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class&#x3D;&quot;panel&quot;&gt;</span><br><span class="line">&lt;p&gt;W3School - 领先的 Web 技术教程站点&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;在 W3School，你可以找到你所需要的所有网站建设教程。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p class&#x3D;&quot;flip&quot;&gt;请点击这里&lt;&#x2F;p&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="slideUp-方法用于向上滑动元素。"><a href="#slideUp-方法用于向上滑动元素。" class="headerlink" title="slideUp() 方法用于向上滑动元素。"></a>slideUp() 方法用于向上滑动元素。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt; </span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;.flip&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;.panel&quot;).slideUp(&quot;slow&quot;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">div.panel,p.flip</span><br><span class="line">&#123;</span><br><span class="line">margin:0px;</span><br><span class="line">padding:5px;</span><br><span class="line">text-align:center;</span><br><span class="line">background:#e5eecc;</span><br><span class="line">border:solid 1px #c3c3c3;</span><br><span class="line">&#125;</span><br><span class="line">div.panel</span><br><span class="line">&#123;</span><br><span class="line">height:120px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"> </span><br><span class="line">&lt;body&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class&#x3D;&quot;panel&quot;&gt;</span><br><span class="line">&lt;p&gt;W3School - 领先的 Web 技术教程站点&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;在 W3School，你可以找到你所需要的所有网站建设教程。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p class&#x3D;&quot;flip&quot;&gt;请点击这里&lt;&#x2F;p&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="slideToggle-方法可以在-slideDown-与-slideUp-方法之间进行切换。"><a href="#slideToggle-方法可以在-slideDown-与-slideUp-方法之间进行切换。" class="headerlink" title="slideToggle() 方法可以在 slideDown() 与 slideUp() 方法之间进行切换。"></a>slideToggle() 方法可以在 slideDown() 与 slideUp() 方法之间进行切换。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">W3School TIY EditorP7</span><br><span class="line">W3School 在线教程</span><br><span class="line">改变方向</span><br><span class="line">暗黑模式</span><br><span class="line">运行代码</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt; </span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">$(&quot;.flip&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;.panel&quot;).slideToggle(&quot;slow&quot;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">div.panel,p.flip</span><br><span class="line">&#123;</span><br><span class="line">margin:0px;</span><br><span class="line">padding:5px;</span><br><span class="line">text-align:center;</span><br><span class="line">background:#e5eecc;</span><br><span class="line">border:solid 1px #c3c3c3;</span><br><span class="line">&#125;</span><br><span class="line">div.panel</span><br><span class="line">&#123;</span><br><span class="line">height:120px;</span><br><span class="line">display:none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"> </span><br><span class="line">&lt;body&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class&#x3D;&quot;panel&quot;&gt;</span><br><span class="line">&lt;p&gt;W3School - 领先的 Web 技术教程站点&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>



<h1 id="jQuery-效果-动画"><a href="#jQuery-效果-动画" class="headerlink" title="jQuery 效果 - 动画"></a>jQuery 效果 - 动画</h1><p>jQuery animate() 方法用于创建自定义动画。</p>
<h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(selector).animate(&#123;params&#125;,speed,callback);</span><br></pre></td></tr></table></figure>

<p>必需的 params 参数定义形成动画的 CSS 属性。</p>
<p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。</p>
<p>可选的 callback 参数是动画完成后所执行的函数名称。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;div&quot;).animate(&#123;</span><br><span class="line">      left:&#39;250px&#39;,</span><br><span class="line">      opacity:&#39;0.5&#39;,</span><br><span class="line">      height:&#39;150px&#39;,</span><br><span class="line">      width:&#39;150px&#39;</span><br><span class="line">    &#125;,4000,function()&#123;</span><br><span class="line">    alert(&quot;aa&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"> </span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;button&gt;开始动画&lt;&#x2F;button&gt;</span><br><span class="line">&lt;p&gt;默认情况下，所有 HTML 元素的位置都是静态的，并且无法移动。如需对位置进行操作，记得首先把元素的 CSS position 属性设置为 relative、fixed 或 absolute。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;div style&#x3D;&quot;background:#98bf21;height:100px;width:100px;position:absolute;&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h1 id="jQuery-stop-方法"><a href="#jQuery-stop-方法" class="headerlink" title="jQuery stop() 方法"></a>jQuery stop() 方法</h1><p>jQuery stop() 方法用于停止动画或效果，在它们完成之前。</p>
<p>stop() 方法适用于所有 jQuery 效果函数，包括滑动、淡入淡出和自定义动画。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(selector).stop(stopAll,goToEnd);</span><br></pre></td></tr></table></figure>

<p>可选的 stopAll 参数规定是否应该清除动画队列。默认是 false，即仅停止活动的动画，允许任何排入队列的动画向后执行。</p>
<p>可选的 goToEnd 参数规定是否立即完成当前动画。默认是 false。</p>
<p>因此，默认地，stop() 会清除在被选元素上指定的当前动画。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;#flip&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#panel&quot;).slideDown(5000);</span><br><span class="line">  &#125;);</span><br><span class="line">  $(&quot;#stop&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#panel&quot;).stop();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">#panel,#flip</span><br><span class="line">&#123;</span><br><span class="line">padding:5px;</span><br><span class="line">text-align:center;</span><br><span class="line">background-color:#e5eecc;</span><br><span class="line">border:solid 1px #c3c3c3;</span><br><span class="line">&#125;</span><br><span class="line">#panel</span><br><span class="line">&#123;</span><br><span class="line">padding:50px;</span><br><span class="line">display:none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"> </span><br><span class="line">&lt;button id&#x3D;&quot;stop&quot;&gt;停止滑动&lt;&#x2F;button&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;flip&quot;&gt;点击这里，向下滑动面板&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;panel&quot;&gt;Hello world!&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h2 id="jQuery-Callback-函数"><a href="#jQuery-Callback-函数" class="headerlink" title="jQuery Callback 函数"></a>jQuery Callback 函数</h2><p>当动画 100% 完成后，即调用 Callback 函数。</p>
<h3 id="典型的语法："><a href="#典型的语法：" class="headerlink" title="典型的语法："></a>典型的语法：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(selector).hide(speed,callback)</span><br></pre></td></tr></table></figure>

<p><em>callback</em> 参数是一个在 hide 操作完成后被执行的函数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;jquery&#x2F;jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).hide(1000,function()&#123;</span><br><span class="line">    alert(&quot;The paragraph is now hidden&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot;&gt;Hide&lt;&#x2F;button&gt;</span><br><span class="line">&lt;p&gt;This is a paragraph with little content.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<h2 id="jQuery-方法链接"><a href="#jQuery-方法链接" class="headerlink" title="jQuery 方法链接"></a>jQuery 方法链接</h2><p>直到现在，我们都是一次写一条 jQuery 语句（一条接着另一条）。</p>
<p>不过，有一种名为链接（chaining）的技术，允许我们在相同的元素上运行多条 jQuery 命令，一条接着另一条。</p>
<p><strong>提示：</strong>这样的话，浏览器就不必多次查找相同的元素。</p>
<p>如需链接一个动作，您只需简单地把该动作追加到之前的动作上。</p>
<h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子 1"></a>例子 1</h3><p>下面的例子把 css(), slideUp(), and slideDown() 链接在一起。”p1” 元素首先会变为红色，然后向上滑动，然后向下滑动：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;jquery&#x2F;jquery-1.11.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function()</span><br><span class="line">  &#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#p1&quot;).css(&quot;color&quot;,&quot;red&quot;).slideUp(2000).slideDown(2000);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;p id&#x3D;&quot;p1&quot;&gt;jQuery 乐趣十足！&lt;&#x2F;p&gt;</span><br><span class="line">&lt;button&gt;点击这里&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>gulp打包成css</title>
    <url>/2020/05/30/gulp%E6%89%93%E5%8C%85%E6%88%90css/</url>
    <content><![CDATA[<h2 id="gulp打包成css"><a href="#gulp打包成css" class="headerlink" title="gulp打包成css"></a>gulp打包成css</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、安装gulp:	npm install --global gulp</span><br><span class="line">2、cd到Desktop(桌面)，新建一个sassDemo文件夹，用mkdir命令，然后cd到这个文件</span><br><span class="line">3、执行npm init	一直回车即可</span><br><span class="line">4、然后执行npm install --save-dev gulp   </span><br><span class="line">5、使用gulp搭建sass环境</span><br><span class="line">npm install gulp-sass --save-dev</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">6、在根目录新建一个gulpfile.js文件 </span><br><span class="line">    var gulp &#x3D;require(&#39;gulp&#39;);</span><br><span class="line">    var sass &#x3D; require(&#39;gulp-sass&#39;);</span><br><span class="line"></span><br><span class="line">    gulp.task(&#39;sass&#39;,gulp.series(function()&#123;</span><br><span class="line">        return gulp.src(&#39;app&#x2F;scss&#x2F;*.scss&#39;)</span><br><span class="line">         .pipe(sass())</span><br><span class="line">         .pipe(gulp.dest(&#39;app&#x2F;css&#39;))</span><br><span class="line">    &#125;));</span><br><span class="line">7、运行 gulp sass</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Vue-cli</title>
    <url>/2020/05/30/Vue-cli/</url>
    <content><![CDATA[<h1 id="Vue-cli"><a href="#Vue-cli" class="headerlink" title="Vue-cli"></a>Vue-cli</h1><h4 id="关于旧版本"><a href="#关于旧版本" class="headerlink" title="关于旧版本"></a>关于旧版本</h4><p>Vue CLI 的包名称由 <code>vue-cli</code> 改成了 <code>@vue/cli</code>。 如果你已经全局安装了旧版本的 <code>vue-cli</code> (1.x 或 2.x)，你需要先通过 <code>npm uninstall vue-cli -g</code> 或 <code>yarn global remove vue-cli</code> 卸载它。</p>
<a id="more"></a>

<h4 id="Node-版本要求"><a href="#Node-版本要求" class="headerlink" title="Node 版本要求"></a>Node 版本要求</h4><p>Vue CLI 需要 <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a></p>
<p><a href="https://nodejs.org/" target="_blank" rel="noopener"> </a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener"> </a><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p>
<h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g @vue&#x2F;cli  或者  yarn global add @vue&#x2F;cli</span><br></pre></td></tr></table></figure>



<h3 id="命令来检查其版本"><a href="#命令来检查其版本" class="headerlink" title="命令来检查其版本"></a>命令来检查其版本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue --version</span><br></pre></td></tr></table></figure>



<h3 id="创建项目的方法"><a href="#创建项目的方法" class="headerlink" title="创建项目的方法"></a>创建项目的方法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、vue create 项目名称</span><br><span class="line">2、vue ui ，回车之后会生产一个网址，打开即可创建项目</span><br><span class="line">注意：第一种值命令行创建方法，第二种是图形化创建方法</span><br></pre></td></tr></table></figure>



<h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run serve:热更新，此时只能通过localhost:8080打开（开发时用）</span><br><span class="line">npm run build:打包生产最终的代码，会多一个buli目录，里面的程序可以运行(项目完成时用)</span><br></pre></td></tr></table></figure>



<h3 id="我自己配置的一个安装名字"><a href="#我自己配置的一个安装名字" class="headerlink" title="我自己配置的一个安装名字"></a>我自己配置的一个安装名字</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名字：hhy</span><br><span class="line">安装的功能：只有第一个：babel</span><br></pre></td></tr></table></figure>



<h3 id="创建一个项目-testapp"><a href="#创建一个项目-testapp" class="headerlink" title="创建一个项目:testapp"></a>创建一个项目:testapp</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、找到你要安装的目录，然后在命令行打开，输入：vue create 项目名称</span><br><span class="line">2、提示你选择一个安装方式，默认有两种，一种是默认安装，一种是手动安装，选择手动安装</span><br><span class="line">3、提示你要选择的功能,根据你的需求选择对应的功能,选择babel</span><br><span class="line">4、提示你选择每一个配置文件是单独的还是一个所有配置文件都在一个文件里,选择第二种</span><br><span class="line">5、是否把你现在配置的这个安装方式保存，是，名字：hhy</span><br><span class="line">6、安装成功，cd进这个项目，运行npm run serve</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>jquery常用函数</title>
    <url>/2020/05/30/jquery%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p><strong>jquery常用函数</strong></p>
<p>1.var offset=$(“#id名字”).offset();//获得当前id控件的位置信息<br>offset.left;//获得当前控件离浏览器左边框的距离<br>offset.top;//获得当前控件离浏览器上边框的距离</p>
<a id="more"></a>

<p>2.$(“#id”).height();//获得当前控件的高度–$(“#id”).height(num);//设置当前控件的高度–$(“#id”).width();//获得当前控件的宽度–$(“#id”).width(num);//设置当前控件的宽度<br>3.$(“#id”).css(“top”–”left”–”display:block显示,none不显示”);//设置当前控件的css样式（）里面可以写各种该控件的属性<br>4.$(“#id”).val(str)//给当前控件赋值–如果是给select标签赋值就可以给让select标签选中这值$(“#bqmbselect”).change();<br>5.$(“#id”).empty();//清空当前控件的值<br>6.$(“#id name”)//获得当前控件的子控件 –name指标签名字<br>7.$(“#id”).append(str);//动态的给该控件写代码，可以写标准的html代码,例如:$(“#mydiv ul”).append(“<li data='" value1 "'>“ value2 “</li>“);<br>8.$(“#id li”).each(function(a,b){});//循环一个控件,例如:li,a为当前循环内容的索引，b为每一个当前循环的控件，都为必填<br>9.$(a).attr(b);//取得a控件b属性的值<br>10.setTimeout(function(){},100);//控制方法在多少毫秒后执行<br>11.$(“#id”).focus(function(){});//聚焦事件<br>12.$(“#id”).blur(function(){});//失焦事件<br>13.eval(str);//动态执行字符串<br>14.$(“#id”).html();//获得当前控件在html上显示的值 $(“#id”).text();//获取input框的值<br>15.$(“#id”).click(function(){});//点击事件<br>16.$.trim(str);//去空格<br>17.$.cookie(“cookieName”,”cookieValue”);<br>18.$(“#id”).prop(“selected”,’selected’);//设置当前控件的属性的值<br>19.$(“#id”).hover(function(){});//鼠标悬停事件<br>20.$.ajax({<br>type : “POST”,<br>url : url,<br>data : json,</p>
<p>dataType : “json”,<br>success : function(data) {}<br>});<br>21.$(“#id”).find(“option[value=’?’] input[name=’?’] select[name=’?’]”)<br>22.isNaN(str);//判断一个字符串是不是数字,返回的是一个boolean<br>23.parseFloat(str);//将一个数字字符串转换成数字<br>24.var jsvalue=(isNaN($.trim($(n).find(“td”).eq(3).html())) ||<br>$.trim($(n).find(“td”).eq(3).html())==””)?0:parseFloat($.trim($(n).find(“td”).eq(3).html()));<br>25.$(“#id”).parent();//获得该id元素的父元素<br>26.$(“#id”).children();//获得该id元素的子元素,$(“#id”).children(“a”);//获得该元素子元素中的a标签元素<br>27.$(“#id”).sibling();//获得该id元素的同辈元素<br>28.$(“#id”).addClass(“abc”);//给该Id元素添加名字为abc的样式,删除为removClass(“abc”);<br>29.$(“#id”).unbind();//删除该id绑定的函数事件,括号内有字符串的话则删除的是指定事件,例:”click”<br>30.$(“#id”).clone(true);//克隆<br>31.$(“#id”).not($(“#id last”));//不是id中最后一个<br>32.Num.toFixed(num);//保存数字Num的num位小数<br>33.$(“#id”).hide();//隐藏id<br>34.$(“#id”).show();//显示id<br>35.alert(“val”);//输出值</p>
<p>――――――――――――――――――――――――――――</p>
<p><strong>常用的JQuery函数及功能小结</strong></p>
<p>这篇文章主要介绍了常用的JQuery函数及功能小结 的相关资料,需要的朋友可以参考下</p>
<p><strong>1.文档加载完成执行函数</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>123</th>
<th>$(document).ready(function(){alert(“开始了”);});</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>2.添加/删除CSS类</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>12</th>
<th>$(“#some-id”).addClass(“NewClassName”);$(“#some-id”).removeClass(“ClassNameToBeRemoved”);</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>3.选择符 利用了CSS和Xpath（XML Path Language）选择符的能力，以及jQuery独有的选择符</strong></p>
<p><strong>3.1常用的：</strong></p>
<p>1.根据标签名： $(‘p’) 选择文档中的所有段落</p>
<p>\2. 根据ID： $(“#some-id”)</p>
<p>3.类： $(‘.some-class’)</p>
<p><strong>3.2使用CSS选择符：</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>12</th>
<th>$(“#some-id &gt; li”) 选择特定id下的所有子li元素$(“#some-id li:not(.horizontal)”) 伪类选择，特定id下所有没有.horizontal 类的li元素</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>3.3使用XPath选择符：</strong></p>
<p>属性选择：$(“a[@title]”) 选择所有带title属性的链接</p>
<p>$(“div[ol]”) 选择包含一个ol元素的所有div元素</p>
<p>$(‘a[@href^=”mailto:%22]’) 选择所有带href属性[@href]且该属性值以mailto开头^=”mailto”（^标识字符串开始，$标识字符串结</p>
<p>尾，*表示字符串中任意位置）</p>
<p>$(‘a[@href$=”.pdf”]’) 选择带有href属性且该属性值以.pdf结尾的所有链接</p>
<p>$(‘a[@href*=”mysite.com”]’) 选择mysite.com出现在href任意位置(包含mysite.com)的所有链接</p>
<p><strong>3.4JQuery自定义选择符（过滤器，从已选择的结果集中过滤出符合某一条件的所有元素），与CSS的伪类选择符相似，使用“:”开头</strong></p>
<p>1.$(‘div.horizontal:eq(1)’) 选择带有类horizontal的div集合中的第2个项</p>
<p>$(‘div:nth-child(1)’) 选择作为其父元素第1个子元素的所有div</p>
<p>2.自定义选择符:odd和:even选择奇偶行</p>
<p>$(‘tr:odd’).addClass(‘odd’); //过滤选择结果集中的奇数元素</p>
<p>$(‘tr:even’).addClass(‘even’); //过滤选择结果集中的偶数元素</p>
<p>3.自定义选择符:contains()</p>
<p>$(‘td:contains(“Henry”)’) 选择包含Henry字符串的所有表格</p>
<p><strong>3.5JQuery选择函数</strong></p>
<p>1.$(‘#some-id’).parent() 选择特定元素的父元素</p>
<p>2.$(‘#some-id’).next() 选择特定元素最近的下一个同级元素</p>
<p>3.$(‘#some-id’).siblings() 选择特定元素的所有同级元素</p>
<p>4.$(‘#some-id’).find(‘.some-class’) 选择特定元素下所有包含特定类的元素</p>
<p>5.$(‘#some-id’).find(‘td’).not(‘:contains(“Henry”)’) 选择特定元素下表格内容不包含Henry的所有元素</p>
<p>5.$(‘#some-id’).find(‘td’).not(‘:contains(“Henry”)’).end() .end()表示回到最后一次.find()的元素处</p>
<p><strong>3.6访问DOM元素，使用get()方法从选择后的JQuery对象中获得，去掉JQuery的包装</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>12</th>
<th>var myTag = $(‘#some-id’).get(0).tagName;var myTag = $(‘#some-id’)[0].tagName; //与上面的等效</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>4.事件（都是给某一元素绑定事件）</strong></p>
<p><strong>4.1绑定事件</strong> </p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>123</th>
<th>$(“#some-id”).bind(“click”, function(){ })$(“#some-id”).unbind(“click”, bindedFunctionName); //移除已绑定的事件，前提是绑定的函数有名称（不是匿名函数）$(“#some-id”).click(function(){ })</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>4.2复合函数绑定事件</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>1234</th>
<th>$(“#some-id”).toggle(function(){ } ,function(){ }); //交替执行$(“#some-id”).toggleClass(“hidden”); // 添加/删除类交替进行$(“#some-id”).hover(function(){ }, function(){ }); //鼠标进入元素时执行第一个函数，离开元素时执行第二个函数$(“#some-id”).one(“click”, functionName); //只需触发一次，随后便立即解除绑定</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>4.3模仿用户触发某一事件</strong></p>
<p>$(“#some-id”).trigger(“click”); //触发特定元素的click事件</p>
<p><strong>5.为元素添加效果</strong></p>
<p><strong>5.1读取或设置CSS样式属性</strong></p>
<p>$(“#some-id”).css(“property”) //读取样式值<br>$(‘#some-id’).css(‘property’, ‘value’) //设置一个样式值<br>$(‘#some-id’).css({property1: ‘value1’, property2: ‘value2’}) //设置多个样式属性</p>
<p><strong>5.2改变字体大小</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>123456789</th>
<th>$(document).ready({$(‘#button-id’).click(function(){var currentSize = $(‘#text-id’).css(‘fontSize’); //获取字体大小，如30pxvar num = parseFloat(currentSize, 10); //将值转为浮点数，.parseFloat( , )为javascript内置函数，这里是转为10进制的浮点数var unit = currentSize.slice(-2); //获取单位名称，如px，.slice()是javascript内置函数，获取字符串指从定位置开始的子字符串，-2表示倒数两个字符num *= 1.5;$(‘text-id’).css(‘fontSize’, num + unit); //设置字体大小样式});});</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>5.3隐藏和显示</strong></p>
<p>$(‘#some-id’).show(); //无效果，会自动记录原来的display属性值（如：block, inline），再回复display值<br>$(‘#some-id’).hide(); //无效果，等效于：$(‘#some-id’).css(‘display’, ‘none’); 隐藏元素，不保留物理位置<br>大小、透明度逐渐变化的显示或隐藏</p>
<p>$(‘#some-id’).show(‘slow’); //指定显示速度，在指定时间内元素的高、宽、不透明度逐渐增加到属性值，有：slow是0.6秒，normal是0.4秒，fast是0.2秒，或者直接填入毫秒数<br>$(‘#some-id’).hide(800); //与.show()指定速度显示一样，指定时间内高、宽、不透明度逐渐减小到0</p>
<p>淡入淡出</p>
<p>$(‘some-id’).fadeIn(‘slow’); //指定时间内不透明度属性值由0增加到1<br>$(‘some-id’).fadeOut(‘slow’); //指定时间内不透明度值由1减小到0</p>
<p><strong>5.4构建具有动画效果的show</strong></p>
<p>主要调用.animate()方法，其有4个参数：包含样式属性及值的映射；可选的速度参数；可选的缓动类型；可选的回调函数；</p>
<p><strong>1.并发显示多个效果</strong></p>
<p>$(‘#some-id’).animate({height: ‘show’, width: ‘show’, opacity: ‘show’}, ‘slow’, function(){ alert(‘动画显示元素’);});<br>$(‘div .button’).animate({left:600, height:44}, ‘slow’); //水平位置从0移动到600，高度由0增加到44</p>
<p><strong>2.排队显示多个效果，级联多个.animate()，一个效果显示完了再显示下一个效果</strong></p>
<p>$(‘#some-id’).animate({left:600}, ‘slow’).animate({height: 44}, ‘slow’);<br>6DOM操作</p>
<p><strong>6.1属性操作</strong></p>
<p><a href="https://www.jb51.net/article/81425.htm" target="_blank" rel="noopener">?</a></p>
<table>
<thead>
<tr>
<th>1234567891011</th>
<th>$(‘#some-id’).attr(‘property’); //获取属性$(‘#some-id’).attr(‘property’,’value’); //设置属性$(‘#some-id’).attr({‘property1’: ‘value1’, ‘property2’: ‘value2’}); //设置多个属性修改一个段落中所有链接，并给每个链接附上新的id号$(‘div p .content a’).each(function(index){$(this).attr({‘rel’: ‘external’,’id’: ‘link_’ + index});});// <strong>*****</strong> JQuery的.each()类似一个迭代器，给其传递的参数index类似一个计数器 <strong>*****</strong></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>6.2插入新元素</p>
<p>1.将元素插入到其他元素前面：.insertBefore()和.before()</p>
<p>2.将元素插入到其他元素后面：.insertAfter()和after()</p>
<p>3.将元素插入到其他元素内部或后面（相当于追加一个元素）：appendTo()和append()</p>
<p>4.将元素插入到其他元素内部或前面（相当于追加一个元素）：prependTo()和prepend()</p>
<p>6.3包装元素，将元素包装到其他元素中 .wrap();</p>
<p>$(‘#some-id’).wrap(‘<li></li>‘); // 将某一特定元素包装到li中，即在特定元素外围添加一个包围元素</p>
<p>6.4复制元素 .clone()</p>
<p>1.$(‘#some-id’).clone().appendTo($(‘body’));</p>
<p>2.复制深度，当传入false参数时，只复制匹配上的元素，其内部的其他元素不复制</p>
<p>$(‘#some-id’).clone(false)</p>
<p>注意：.clone()方法不会复制元素中的事件</p>
<p>6.5移除匹配元素中的元素，类似清空元素</p>
<p>$(‘#some-id’).empty();</p>
<p>6.6从DOM中移除匹配的元素及其后代元素</p>
<p>$(‘#some-id’).remove();</p>
<p>有关常用的JQuery函数及功能小结 小编就给大家介绍到这里，希望对大家有所帮助！</p>
]]></content>
  </entry>
  <entry>
    <title>linux</title>
    <url>/2020/05/30/linux/</url>
    <content><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="期末复习"><a href="#期末复习" class="headerlink" title="期末复习"></a>期末复习</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第三章：</span><br><span class="line">1、文件系统格式etx、XFS、JFS</span><br><span class="line">2、文件类型：-普通文件、d目录文件、l链接文件</span><br><span class="line">3、帮助命令：help、man、info</span><br><span class="line">4、文件夹操作：mkdir:新建、rmdir:删除空目录、cd：进入目录、pwd:显示路径</span><br><span class="line">5、文件操作：cp：复制、rm:删除、mv:移动、touch:新建、cat:查看内容、ls(-a -l -h -i)、</span><br><span class="line">ln [-s] &lt;源文件&gt; &lt;目标文件&gt;：创建软硬链接</span><br><span class="line">6、重导：&gt;:把目标内容替换原内容；		&gt;&gt;：把目标内容放到原内容的后面，不会替换</span><br><span class="line">7、文件权限：r、w、x、-:可读、可写、可执行、无权限:4、2、1、0</span><br><span class="line">8、chmod [选项] &lt;权限设定&gt; &lt;文件&#x2F;目录&gt;	：修改权限</span><br><span class="line">9、chown [选项] &lt;属主&gt; &lt;文件&#x2F;目录&gt;	  ：修改属主</span><br><span class="line">10、chgrp [选项] &lt;属组&gt; &lt;文件&#x2F;目录&gt;	  ：修改所属用户组</span><br><span class="line">11、umask [权限掩码]	：设置默认权限掩码</span><br><span class="line"></span><br><span class="line">第四章：</span><br><span class="line">1、passwd:用户账户的配置文件; 可以通过cat、less查看</span><br><span class="line">[用户名]：[密码]：[UID]:[GID]:[身份描述]:[主目录]:[登录shell]</span><br><span class="line">2、shadow文件：记录用户密码的文件</span><br><span class="line">[用户名]：[密码]:[最后一次修改的时间]:[最小时间间隔]:[最大时间间隔]:[警告时间]:[不活动时间]:[失效时间]:[保留字段]</span><br><span class="line">3、常用的shell:sh、bash、shell、ksh、csh</span><br><span class="line">4、创建用户：useradd [选项] &lt;用户名&gt;</span><br><span class="line">5、删除用户：userdel [选项] &lt;用户名&gt;</span><br><span class="line">6、passwd [选项] &lt;用户名&gt;	：修改密码</span><br><span class="line"></span><br><span class="line">7、group:用户组的配置文件	[组名]:[密码]:[GID]:[组员列表]</span><br><span class="line">8、gshadow:用户名的密码文件	[组合]:[密码]:[组管理员]:[组员列表]</span><br><span class="line">9、groupadd [-g] &lt;用户组名&gt;	:新建用户组</span><br><span class="line">10、groupdel &lt;用户组名&gt;		：删除用户组</span><br><span class="line">11、groupmod [-g&#x2F;-n] &lt;用户组名&gt; :修改用户组</span><br><span class="line">12、gpasswd [选项-a-d-r] &lt;用户组&gt;		：管理用户组</span><br><span class="line">13、groups &lt;用户名&gt;		：查看用户所属用户组</span><br><span class="line"></span><br><span class="line">第五章：</span><br><span class="line">1、ps [-l-u-a-x]		:静态显示进程信息</span><br><span class="line">2、top [-d-p]		:动态显示进程信息</span><br><span class="line">3、nice [选项] &lt;命令&gt;	：设置程序运行的NI值	（谦让值越低，优先值越高，-20到19）</span><br><span class="line">4、renice [选项] &lt;命令&gt;	：设置程序正在运行的NI值	（谦让值越低，优先值越高，-20到19）</span><br><span class="line">5、ctrl+c:终止前台进程的运行</span><br><span class="line">6、kill [-9] &lt;进程号&gt; ：终止正在运行的进程</span><br><span class="line">7、killall &lt;进程名&gt;	  ：终止所有同名的进程</span><br><span class="line"></span><br><span class="line">8、&amp;	：将命令放在后台运行</span><br><span class="line">9、ctrl+z :将正在运行的进程放在后台，并处于暂停状态</span><br><span class="line">10、jobs [-l-r-n-p] :查看进程号</span><br><span class="line">11、bg [进程号] ：将后台暂停运行的命令变成后台继续运行</span><br><span class="line">12、fg [进程号] ：将后台指定进程变成前台进程继续运行</span><br><span class="line">13、at [选项] 时间</span><br><span class="line"></span><br><span class="line">第六章：</span><br><span class="line">14、&#x2F;etc&#x2F;hosts:主机名和ip地址的静态映射</span><br><span class="line">15、&#x2F;etc&#x2F;services :网络服务的名称、传输协议、端口号</span><br><span class="line">16、&#x2F;etc&#x2F;hostname :主机名</span><br><span class="line">17、&#x2F;etc&#x2F;network&#x2F;interfasec :网络接口参数配置文件</span><br><span class="line">18、&#x2F;etc&#x2F;resolv.conf :NDS域名解析</span><br><span class="line">19、&#x2F;etc&#x2F;init.d&#x2F;networking restart :重启网络脚本</span><br><span class="line">20、ifconfig :查看网卡信息</span><br><span class="line">21、ifup &lt;网络接口&gt; ：开启网卡</span><br><span class="line">22、ifdown &lt;网络接口&gt; ：禁止网卡</span><br><span class="line">23、route :查看路由</span><br><span class="line">24、ping IP :查看是否连通</span><br><span class="line">25、hostname :主机名</span><br><span class="line"></span><br><span class="line">第七章：</span><br><span class="line">1、更新软件包信息：apt-get update</span><br><span class="line">2、搜索软件包：apt-cache search 包名关健字</span><br><span class="line">3、查看软件包信息：apt-get show 软件包名</span><br><span class="line">4、安装软件包：apt-get install 软件包名</span><br><span class="line">5、更新软件包：apt-get -u upgrade</span><br><span class="line">6、卸载软件包：apt-get [--purge] remove &lt;软件包名&gt;</span><br><span class="line"></span><br><span class="line">第八章：</span><br><span class="line">dhcp的好处：安全可靠、网络配置自动化、有利于移动用户使用网络</span><br><span class="line">dhcp的安装：apt-get install isc-dhcp-server</span><br><span class="line">dhcp的查看：&#x2F;etc&#x2F;init.d&#x2F;isc-dhcp-server status</span><br><span class="line">dhcp的启动：&#x2F;etc&#x2F;init.d&#x2F;isc-dhcp-server start</span><br><span class="line"></span><br><span class="line">dhcp的配置：如ip地址192.168.1.10~192.168.1.60,默认租期40小时，最大租期80小时，网关192.168.1.1</span><br><span class="line">dns服务器地址202.195.48.10 主机名boss，mac地址00:0c:1a:29:bc:23 保留地址192.168.1.12</span><br><span class="line">subnet 192.168.1.0 netmask 255.255.255.0</span><br><span class="line">&#123;</span><br><span class="line">	range 192.168.1.10  192.168.1.60;</span><br><span class="line">	option routers  192.168.1.1;</span><br><span class="line">	option subnet-mask  255.255.255.0;</span><br><span class="line">	option domain-name-servers 202.195.48.10;</span><br><span class="line">	default-lease-time  144000;</span><br><span class="line">	max-lease-time  288000;</span><br><span class="line">	</span><br><span class="line">	host boss</span><br><span class="line">	&#123;</span><br><span class="line">		hardware ethernet  00:0c:1a:29:bc:23;</span><br><span class="line">		fixed-address  192.168.1.12;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">第九章：</span><br><span class="line">1、路由器的主要功能是转发不同网络之间的数据，有静态路由和动态路由</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.1.2</span><br><span class="line">network 192.168.1.0</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">broadcast 192.168.1.255</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line"></span><br><span class="line">2、NAT(网络地址转换)：是一种将私有地址转换为合法IP地址的技术</span><br><span class="line">好处：可以解决IP地址不足的问题、可以避免外来网络的攻击，保护网络内部的计算机</span><br><span class="line"></span><br><span class="line">第十章：</span><br><span class="line">1、NFS：网络文件系统：节约磁盘空间、节约硬件资源、统一设立用户家目录</span><br><span class="line">2、安装：apt-get install nfs-kernel-server nfs-common portmap</span><br><span class="line">3、启动：&#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server start</span><br><span class="line">4、停止：&#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server stop</span><br><span class="line">5、格式： &lt;目录&gt; &lt;主机1&gt;(参数rw、ro、all_squash) [&lt;主机2&gt;(参数) &lt;主机n&gt;(参数)]</span><br><span class="line">6、重启nfs服务：&#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server restart		修改：exportfs -arv</span><br><span class="line">7、查看nfs服务器信息：showmount [选项-a-d-e] [服务器]</span><br><span class="line">8、将IP地址192.168.0.5的nfs上的&#x2F;tmp共享目录挂载到本地&#x2F;mnt&#x2F;nfs目录</span><br><span class="line">	mount -t nfs 192.168.0.5:&#x2F;tmp &#x2F;mnt&#x2F;nfs</span><br><span class="line">9、卸载nfs文件系统：umount &#x2F;mnt&#x2F;nfs</span><br></pre></td></tr></table></figure>



<h3 id="常用命令配置"><a href="#常用命令配置" class="headerlink" title="常用命令配置"></a>常用命令配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pwd:当前绝对路径</span><br><span class="line"></span><br><span class="line">exit:命令行里面退出登录</span><br><span class="line"></span><br><span class="line">Ctrl+Alt+F1:</span><br><span class="line"></span><br><span class="line">Ctrl+Alt+T:打开终端</span><br><span class="line"></span><br><span class="line">ctrl+alt+f1和f2是图形化界面	ctrl+alt+f3至f7是命令行界面</span><br><span class="line"></span><br><span class="line">ls -l 文件：查看文件的详细信息</span><br><span class="line"></span><br><span class="line">ls -ld 文件夹：查看文件夹的详细信息</span><br><span class="line"></span><br><span class="line">ctrl+l: 清理命令行</span><br><span class="line"></span><br><span class="line">su root: 切换超级管理员</span><br><span class="line"></span><br><span class="line">su - root:切换超级管理员并且环境也切换</span><br><span class="line"></span><br><span class="line">man 要查看的命令:查看这个命令的用法</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="【特殊情况】"><a href="#【特殊情况】" class="headerlink" title="【特殊情况】"></a>【特殊情况】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、设置umask时，假如文件减去umask时出现负数，则该项则为零。 </span><br><span class="line">如：umask为：027；文件：666-027&#x3D;640</span><br><span class="line"></span><br><span class="line">2、当umask为奇数时,文件的权限公式为6-(n-1). </span><br><span class="line">如：umask为：234  文件：666-234&#x3D;442</span><br></pre></td></tr></table></figure>





<h3 id="【文件夹操作】"><a href="#【文件夹操作】" class="headerlink" title="【文件夹操作】"></a>【文件夹操作】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir:新建文件夹 如：mkdir pg</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;hhy&#x2F;d1&#x2F;d2	:-p是指你创建的路径下有未创建的文件夹，则也自动创建，如d1不存在也会自动创建</span><br><span class="line"></span><br><span class="line">rmdir:删除文件夹（只能删除空的文件夹） 如：rmdir pg</span><br><span class="line"></span><br><span class="line">mv:重命名文件夹 如：mv pg gp</span><br><span class="line"></span><br><span class="line">cd:切换目录</span><br><span class="line"></span><br><span class="line">~ &#x3D;主目录 如：~hai  &#x3D;&#x3D; &#x2F;home&#x2F;hhy&#x2F;hai</span><br><span class="line"></span><br><span class="line">.：当前目录 </span><br><span class="line"></span><br><span class="line">.. :上一级目录</span><br><span class="line"></span><br><span class="line">ls:显示当前文件夹的文件名字</span><br><span class="line">ls-l:显示当前文件夹下文件的具体信息</span><br><span class="line">ls-a: 显示当前文件夹下所有的文件（包括.开头的隐藏文件）</span><br><span class="line">a选择可以和l选项组合使用,ls命令可以使用指导一个文件路径</span><br></pre></td></tr></table></figure>



<h3 id="【文件操作】"><a href="#【文件操作】" class="headerlink" title="【文件操作】"></a>【文件操作】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch:新建文件 如：touch file</span><br><span class="line"></span><br><span class="line">rm:删除文件 如：rm file</span><br><span class="line"></span><br><span class="line">echo ‘I am a boy’ &gt;&gt; .&#x2F;test.txt：添加文本内容</span><br><span class="line"></span><br><span class="line">rm -r；删除文件夹和里面的文件 如：rm -r file</span><br><span class="line"></span><br><span class="line">mv:重命名	如：mv file file2</span><br><span class="line"></span><br><span class="line">cat:查看文件内容(内容较少的情况下)  如：cat file</span><br><span class="line"></span><br><span class="line">less:查看文件内容(内容较多的情况下),退出需要按q  如：less file</span><br><span class="line"></span><br><span class="line">mv file pg:表示把file这个文件移动到pg这个文件夹下</span><br><span class="line"></span><br><span class="line">&gt; :会把原来的内容替换掉	如：cat file1 &gt; file2 会把file1的内容复制到file2里，file2原本的内容清空</span><br><span class="line"></span><br><span class="line">&gt; &gt; :不会替换原来的内容，并且会在末尾添加上去</span><br></pre></td></tr></table></figure>



<h3 id="3-2-5命令快捷方式"><a href="#3-2-5命令快捷方式" class="headerlink" title="3.2.5命令快捷方式"></a>3.2.5命令快捷方式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用tab键进行命令补齐</span><br><span class="line">使用history命令查看历史记录 	如：history 20</span><br><span class="line">配置别名：alias,关闭命令行之后就会失效  如：alias ch&#x3D;&#39;cd &#x2F;home&#x2F;hhy&#39;</span><br><span class="line">在一行输入多个命令  </span><br><span class="line">可以使用;符号分割：不管前面命令是否执行成功，后面都会执行</span><br><span class="line">可以使用&amp;&amp;符号分割：前面命令执行失败，后面命令不会执行</span><br></pre></td></tr></table></figure>



<h3 id="3-3-3文件操作命令"><a href="#3-3-3文件操作命令" class="headerlink" title="3.3.3文件操作命令"></a>3.3.3文件操作命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用cp命令复制文件或目录</span><br><span class="line">用法：</span><br><span class="line">cp [选项] &lt;原文件或目录&gt; &lt;目的文件或目录&gt;</span><br><span class="line">例：</span><br><span class="line">cp -r pg pgg	(复制文件不用-r，复制文件夹用-r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用ln命令添加链接：分为软链接和硬链接</span><br><span class="line">软连接可以用于目录，可以跨分区；硬连接不可以用于目录，不可以跨分区</span><br><span class="line">软连接创建，删除源文件访问不了，和源文件不是同一个文件</span><br><span class="line">	ln -s &lt;源文件&gt; &lt;目标文件&gt;</span><br><span class="line">	例： ln -s sun.txt sun.soft</span><br><span class="line">硬链接创建，删除源文件还能访问，和源文件是同一个文件：</span><br><span class="line">	ln &lt;源文件&gt; &lt;目标文件&gt;</span><br><span class="line">	例： ln sun.txt sun.soft</span><br></pre></td></tr></table></figure>



<h3 id="3-3-4重导和管道"><a href="#3-3-4重导和管道" class="headerlink" title="3.3.4重导和管道"></a>3.3.4重导和管道</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">重导：</span><br><span class="line">&gt;会把原来的文件内容清空</span><br><span class="line">&gt;&gt;保留原来的内容，并把新内容添加到末尾</span><br><span class="line"></span><br><span class="line">管道：</span><br><span class="line">前一个命令的结果作为下一个命令的输入,用|符号</span><br><span class="line">例：ls -l &#x2F;etc | less</span><br></pre></td></tr></table></figure>



<h3 id="3-4-1文件属性和权限"><a href="#3-4-1文件属性和权限" class="headerlink" title="3.4.1文件属性和权限"></a>3.4.1文件属性和权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -li test  :l是显示具体信息；  i是显示inode值的id</span><br><span class="line"></span><br><span class="line">文件权限：</span><br><span class="line">r: 可读</span><br><span class="line">w: 可写</span><br><span class="line">x: 可执行</span><br><span class="line">-： 无权限</span><br><span class="line"></span><br><span class="line">例：rwxrw-r--</span><br><span class="line">rwx:拥有者权限</span><br><span class="line">rw-:属组</span><br><span class="line">r--:其它</span><br></pre></td></tr></table></figure>



<h3 id="3-4-2文件权限操作的相关命令"><a href="#3-4-2文件权限操作的相关命令" class="headerlink" title="3.4.2文件权限操作的相关命令"></a>3.4.2文件权限操作的相关命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">《1》修改权限方法一：使用chmod修改文件或目录权限</span><br><span class="line">    用法：</span><br><span class="line">    chmod  [选项]  &lt;权限设定&gt;  &lt;文件&#x2F;目录名&gt;</span><br><span class="line">    -R表示递归修改目录下所有文件或子目录的权限</span><br><span class="line">	例：chmod 631 txt</span><br><span class="line">&lt;权限设定&gt; r、w、x、-分别用数字4、2、1、0</span><br><span class="line"></span><br><span class="line">《2》修改权限方法二：通过助记语法修改，用直观的字符来表示，字符定义如下：</span><br><span class="line">u代表属主</span><br><span class="line">g代表属组</span><br><span class="line">o代表其他用户</span><br><span class="line">a代表属主、属组和其他用户</span><br><span class="line">+代表增加相关权限</span><br><span class="line">-代表减去相关权限</span><br><span class="line">例：</span><br><span class="line">chmod  go-x  sun.txt</span><br><span class="line"></span><br><span class="line">《3》使用chown命令修改文件属主和用户组</span><br><span class="line">注意：</span><br><span class="line">1、（想要切换属主和用户组，先新增一个用户）</span><br><span class="line">2、（要使用chown，先切换到root用户,用su命令）</span><br><span class="line">用法：</span><br><span class="line">chown  [选项]  &lt;属主[:属组]&gt;  &lt;文件&#x2F;目录名&gt;</span><br><span class="line">-R表示递归修改</span><br><span class="line">例如，将program.c文件的属主改为用户zhang：</span><br><span class="line">[root@debian  test]#  chown  zhang  program.c</span><br><span class="line">例如，将&#x2F;home&#x2F;public目录及其下级子目录和文件的属主和属组分别改为zhang和manager：</span><br><span class="line">[root@Debian  test]#  chown  -R  zhang:manager  &#x2F;home&#x2F;public</span><br><span class="line"></span><br><span class="line">《4》使用chgrp改变文件或目录的所属用户组(和chown相似,但只能改变属组，不能改变属主)</span><br><span class="line">用法：</span><br><span class="line">chgrp  [选项]  &lt;属组&gt;  &lt;文件&#x2F;目录名&gt;</span><br><span class="line">-R表示递归修改</span><br><span class="line">例：</span><br><span class="line">[root@Debian  test]#  chgrp  yzzd  sun.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">《5》使用umask设置创建文件或目录时的默认权限</span><br><span class="line">用法：</span><br><span class="line">1、查看权限掩码：umask</span><br><span class="line">2、设定权限掩码：umask  [权限掩码]</span><br><span class="line">权限掩码由3位八进制数字nnn组成，其中nnn范围为000~777</span><br><span class="line">文件权限&#x3D;666-nnn</span><br><span class="line">目录权限&#x3D;777-nnn</span><br><span class="line">例如，设定权限掩码为666</span><br><span class="line">[root@Debian  test]#  umask  666</span><br></pre></td></tr></table></figure>



<h3 id="命令创建用户和删除用户"><a href="#命令创建用户和删除用户" class="headerlink" title="命令创建用户和删除用户"></a>命令创建用户和删除用户</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、用su - root切换到超级管理员</span><br><span class="line">2、使用adduser bob 创建一个用户</span><br><span class="line">3、使用deluser --remove-home bob 连主目录一起删除</span><br></pre></td></tr></table></figure>



<h3 id="修改登录shell"><a href="#修改登录shell" class="headerlink" title="修改登录shell"></a>修改登录shell</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usermod  -s  &#x2F;bin&#x2F;bash  test  (bash可以更换)</span><br></pre></td></tr></table></figure>



<h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当前密码：passwd</span><br><span class="line">其它用户密码：passwd bob</span><br></pre></td></tr></table></figure>



<h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="VI编辑器"><a href="#VI编辑器" class="headerlink" title="VI编辑器"></a>VI编辑器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、命令行输入：vi：回车即可进入命令模式，此时不能插入内容</span><br><span class="line">2、在命令模式下按i即可进入插入模式，此时可以编辑内容了</span><br><span class="line">3、如果写错要修改先按ESC回到命令模式，如果要修改的内容前面还有内容，可以按dd删除一整行，x可以删除单个字符，在命令模式下可以用键盘的方向键,此时就可以定位到你想要操作的地方了，并且使用对应的命令来操作</span><br><span class="line">4、如果内容无误，则回到命令模式(ESC)，然后进入末行模式(shift+:)</span><br><span class="line">5、进入末行模式后，进行文件保存：w 保存的文件名 。 或者w  文件的路径。 回车后自动进入命令模式	</span><br><span class="line">6、退出，先进入末行命令(shift+:)；按q回车退出</span><br><span class="line">（注意：如果更改内容后还没有保存,按q是退出不了的，可以使用q!（表示强制退出，不保存））</span><br><span class="line">7、退出之后发现还要修改，可以用：vi 保存的文件名</span><br><span class="line"></span><br><span class="line">注意点：</span><br><span class="line">1、在命令模式下按i可以进入插入模式，并且只能在当前光标位置的前面插入内容</span><br><span class="line">1、在命令模式下按a可以进入插入模式，并且只能在当前光标位置的后面插入内容</span><br></pre></td></tr></table></figure>



<h3 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h3><h4 id="软件的安装与卸载"><a href="#软件的安装与卸载" class="headerlink" title="软件的安装与卸载"></a>软件的安装与卸载</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">软件的安装与卸载可以在命令行里进行，但是由于安装软件的服务器在国外，所以安装软件速度比较慢，因此需要将安装软件的服务器地址换成国内的。</span><br><span class="line">1、更改配置文件，用VI编辑器打开&#x2F;etc&#x2F;apt&#x2F;sources.list,也就是sudo vi &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line">2、把里面的所有内容删掉，换成国内的服务器地址，在这个网址里面随便找一个国内的服务器，放到刚刚的文件里https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1590080</span><br><span class="line">3、更新软件包列表：apt-get update（用时每天更新一次）</span><br><span class="line">4、搜素软件包：apt-cache search</span><br><span class="line">5、查看软件包：apt&#x2F;cache show</span><br><span class="line">6、安装软件包：apt-get install 软件包名</span><br><span class="line">7、更新全部软件包：apt-get update</span><br><span class="line">8、卸载软件包：apt-get[--purge] remove 软件包名	（[]表示可选项,如果用就删除更干净）</span><br><span class="line">注意：4和5不是必选项，只是你不清楚的时候可以查看，如果清楚可以直接执行3和6就可以</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>webpack</title>
    <url>/2020/05/30/webpack/</url>
    <content><![CDATA[<h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p>1、全局安装webpack        npm install webpack -g</p>
<p>2、全局安装webpack -cli        npm install webpack-cli -g</p>
<p>3、：进入选定目录 ，然后执行 npm init       一路回车即可</p>
<a id="more"></a>

<p>3.1、为选定的目录安装依赖          npm install webpack –save-dev</p>
<p>4、为指定的文件打包：</p>
<p>4.1、webpack index.js  -o output.js (生产模式)</p>
<p>4.2、webpack –mode development index.js  -o output.js (开发模式)</p>
<p>5、使用默认的打包方式：</p>
<p>5.1：webpack –mode development</p>
<p>5.2：会自动把src文件夹（需要自己创建）下的文件打包到dist文件夹（自动生成）下</p>
<h3 id="6、使用自定义的打包方式："><a href="#6、使用自定义的打包方式：" class="headerlink" title="6、使用自定义的打包方式："></a>6、使用自定义的打包方式：</h3><p>6.1：在根目录下创建webpack.config.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;单文件打包</span><br><span class="line">&#x2F;* const path &#x3D; require(&#39;path&#39;); &#x2F;&#x2F;引入我们的node模块里的path</span><br><span class="line">    &#x2F;&#x2F;测试下 console.log(path.resolve(__dirname,&#39;dist&#39;)); &#x2F;&#x2F;物理地址拼接</span><br><span class="line">    module.exports &#x3D; &#123;</span><br><span class="line">        entry: &#39;.&#x2F;src&#x2F;index.js&#39;, &#x2F;&#x2F;入口文件  在vue-cli main.js</span><br><span class="line">        output: &#123;       &#x2F;&#x2F;webpack如何向外输出</span><br><span class="line">            path: path.resolve(__dirname, &#39;dist&#39;),&#x2F;&#x2F;定位，输出文件的目标路径</span><br><span class="line">            filename: &#39;index.js&#39; &#x2F;&#x2F;文件名[name].js默认，也可自行配置</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;;*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;多文件打包</span><br><span class="line">      const path &#x3D; require(&#39;path&#39;); &#x2F;&#x2F;引入我们的node模块里的path</span><br><span class="line">    &#x2F;&#x2F;测试下 console.log(path.resolve(__dirname,&#39;dist&#39;)); &#x2F;&#x2F;物理地址拼接</span><br><span class="line">    module.exports &#x3D; &#123;</span><br><span class="line">        entry: &#123;</span><br><span class="line">        	home: &#39;.&#x2F;src&#x2F;home.js&#39;,</span><br><span class="line">        	about: &#39;.&#x2F;src&#x2F;about.js&#39;,</span><br><span class="line">        	other: &#39;.&#x2F;src&#x2F;other.js&#39;</span><br><span class="line">        &#125;, &#x2F;&#x2F;入口文件  在vue-cli main.js</span><br><span class="line">        output: &#123;       &#x2F;&#x2F;webpack如何向外输出</span><br><span class="line">            path: path.resolve(__dirname, &#39;dist&#39;),&#x2F;&#x2F;定位，输出文件的目标路径</span><br><span class="line">            filename: &#39;[name].js&#39; &#x2F;&#x2F;文件名[name].js默认，也可自行配置</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;mode: &quot;development&quot;</span><br><span class="line">     &#125;;</span><br></pre></td></tr></table></figure>

<p>6.2：打包命令：webpack     (打包的是生产模式的文件)     webpack –mode development(开发模式)</p>
<p>6.3：可以在6.1里面配置默认的打包方式，然后可以直接用webpack命令        mode:  “development”      或者     mode: “production”</p>
<h3 id="url-loader：可以打包图片，把他们打包到一个文件里面去，可以达到性能优化的功能，类似于雪碧图的功能，但是比他方便。"><a href="#url-loader：可以打包图片，把他们打包到一个文件里面去，可以达到性能优化的功能，类似于雪碧图的功能，但是比他方便。" class="headerlink" title="url-loader：可以打包图片，把他们打包到一个文件里面去，可以达到性能优化的功能，类似于雪碧图的功能，但是比他方便。"></a>url-loader：可以打包图片，把他们打包到一个文件里面去，可以达到性能优化的功能，类似于雪碧图的功能，但是比他方便。</h3><p>注意，limit的值小于图片的值时，打包出来的是普通图片，大于图片的值才是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一步：npm init -y</span><br><span class="line">第二步：npm install url-loader -S</span><br><span class="line">第三步：npm install file-loader -S</span><br><span class="line">第四步：配置webpack.config.js文件：</span><br><span class="line">module: &#123;</span><br><span class="line">        	rules: [</span><br><span class="line">        	&#123;</span><br><span class="line">        		test: &#x2F;\.(png|jpg|gif)$&#x2F;i,</span><br><span class="line">        		use: [</span><br><span class="line">        			&#123;</span><br><span class="line">        				loader: &#39;url-loader&#39;,</span><br><span class="line">        				options: &#123;</span><br><span class="line">        					limit: 4192</span><br><span class="line">        				&#125;</span><br><span class="line">        			&#125;</span><br><span class="line">        		]</span><br><span class="line">        	&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> 第五步：配置入口文件：如input.js</span><br><span class="line"> import img1 from &#39;.&#x2F;img&#x2F;a.png&#39;;</span><br><span class="line"> import img2 from &#39;.&#x2F;img&#x2F;b.jpg&#39;;</span><br><span class="line"> </span><br><span class="line"> 第六步：运行 webpack</span><br></pre></td></tr></table></figure>



<h3 id="css压缩"><a href="#css压缩" class="headerlink" title="css压缩"></a>css压缩</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用 mode: &quot;production&quot;可以压缩文件，但是仅仅是压缩js文件，不能压缩css文件</span><br><span class="line">要压缩css文件，先安装npm install optimize-css-assets-webpack-plugin</span><br><span class="line">在配置文件中引入：const OptimizeCss &#x3D; require(&#39;optimize-css-assets-webpack-plugin&#39;);</span><br><span class="line">然后在module.exports下新增</span><br><span class="line">optimization:&#123;</span><br><span class="line">		minimizer:[</span><br><span class="line">			new OptimizeCss()</span><br><span class="line">		]</span><br><span class="line">	&#125;,</span><br><span class="line">此时就可以压缩css文件了，但是还有一个问题，使用这个方式之后js不能压缩了，</span><br><span class="line">解决方法：</span><br><span class="line">安装npm install uglifyjs-webpack-plugin -D</span><br><span class="line">在配置文件引入 const UglifyJsPlugin&#x3D;require(&#39;uglifyjs-webpack-plugin&#39;)</span><br><span class="line">在minimizer下新增 new UglifyJsPlugin(&#123;</span><br><span class="line">	cache: true,&#x2F;&#x2F;是否缓存</span><br><span class="line">	parallel:true,&#x2F;&#x2F;是否并发处理</span><br><span class="line">	sourceMap: true</span><br><span class="line">&#125;),</span><br><span class="line">此时就可以一起压缩css和js文件了</span><br></pre></td></tr></table></figure>



<h3 id="bable-loader-把ES6转换成ES5"><a href="#bable-loader-把ES6转换成ES5" class="headerlink" title="bable-loader:把ES6转换成ES5"></a>bable-loader:把ES6转换成ES5</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先npm init生成配置文件</span><br><span class="line">第一步：安装 npm install -D babel-loader @babel&#x2F;core @babel&#x2F;preset-env webpack</span><br><span class="line"></span><br><span class="line">第二步：配置webpack.config.js文件</span><br><span class="line">    module: &#123;</span><br><span class="line">      rules: [</span><br><span class="line">        &#123;</span><br><span class="line">          test: &#x2F;\.m?js$&#x2F;,</span><br><span class="line">          exclude: &#x2F;(node_modules|bower_components)&#x2F;,</span><br><span class="line">          use: &#123;</span><br><span class="line">            loader: &#39;babel-loader&#39;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              presets: [&#39;@babel&#x2F;preset-env&#39;]</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">第三步：编写入口文件:就是ES6语法，如</span><br><span class="line">    async function sayHello() &#123;</span><br><span class="line">        const result &#x3D; await fetch(&#39;https:&#x2F;&#x2F;www.baidu.com&#39;);</span><br><span class="line">        console.log(result);</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello();</span><br></pre></td></tr></table></figure>



<h3 id="打包sass"><a href="#打包sass" class="headerlink" title="打包sass"></a>打包sass</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、先安装 cnpm install sass-loader node-sass -D</span><br><span class="line">2、在再安装 cnpm install style.loader css-loader -D</span><br><span class="line">3、给配置文件里的rules添加</span><br><span class="line">&#123;</span><br><span class="line">		      test: &#x2F;\.scss$&#x2F;,</span><br><span class="line">		      use: [&#123;</span><br><span class="line">		          loader: &quot;style-loader&quot; &#x2F;&#x2F; 将 JS 字符串生成为 style 节点</span><br><span class="line">		      &#125;, &#123;</span><br><span class="line">		          loader: &quot;css-loader&quot; &#x2F;&#x2F; 将 CSS 转化成 CommonJS 模块</span><br><span class="line">		      &#125;, &#123;</span><br><span class="line">		          loader: &quot;sass-loader&quot; &#x2F;&#x2F; 将 Sass 编译成 CSS</span><br><span class="line">		      &#125;]</span><br><span class="line">&#125;</span><br><span class="line">4、新建一个scss文件并添加内容</span><br><span class="line">5、引入input.js</span><br><span class="line">6、打包webpack</span><br></pre></td></tr></table></figure>



<h3 id="MiniCssExtarctPlugin-把Sass文件单独打包到一个文件里去"><a href="#MiniCssExtarctPlugin-把Sass文件单独打包到一个文件里去" class="headerlink" title="MiniCssExtarctPlugin:把Sass文件单独打包到一个文件里去"></a>MiniCssExtarctPlugin:把Sass文件单独打包到一个文件里去</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、安装 npm install mini-css-extract-plugin -D</span><br><span class="line">2、在配置文件里引入 const MiniCssExtarctPlugin &#x3D; require(“mini-css-extract-plugin”);</span><br><span class="line">3、在module.exports &#x3D; 下添加</span><br><span class="line">plugins: [</span><br><span class="line">    new MiniCssExtractPlugin(&#123;</span><br><span class="line">      &#x2F;&#x2F; Options similar to the same options in webpackOptions.output</span><br><span class="line">      &#x2F;&#x2F; both options are optional</span><br><span class="line">      filename: &#39;[name].css&#39;,</span><br><span class="line">      chunkFilename: &#39;[id].css&#39;,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">4、在sass的rules下面的use的内容更换成</span><br><span class="line">  MiniCssExtarctPlugin.loader,</span><br><span class="line">  &quot;css-loader&quot;,</span><br><span class="line">  &quot;sass-loader&quot;</span><br></pre></td></tr></table></figure>



<h1 id="HtmlWebpackPlugin：打包html"><a href="#HtmlWebpackPlugin：打包html" class="headerlink" title="HtmlWebpackPlugin：打包html"></a>HtmlWebpackPlugin：打包html</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、安装  npm install html-webpack-plugin -D</span><br><span class="line">2、在plugin下添加</span><br><span class="line">	new HtmlWebpackPlugin( &#123;</span><br><span class="line">	      title: &#39;Hello&#39;,&#x2F;&#x2F;标题</span><br><span class="line">	      filename: &#39;index.html&#39;,&#x2F;&#x2F;输出文件</span><br><span class="line">	      template: &#39;template.html&#39;&#x2F;&#x2F;输入文件，需要自己创建</span><br><span class="line">	    &#125;)</span><br><span class="line">3、在template.html的title里添加 &lt;%&#x3D; htmlWebpackPlugin.options.title %&gt;&#x2F;&#x2F;自动更新到index.html</span><br></pre></td></tr></table></figure>



<h3 id="热替换"><a href="#热替换" class="headerlink" title="热替换"></a>热替换</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、安装 npm install  webpack-dev-server  -D</span><br><span class="line">2、在配置文件下添加 </span><br><span class="line">	devServer: &#123;</span><br><span class="line">		    contentBase: path.join(__dirname, &#39;dist&#39;),</span><br><span class="line">		    compress: true,</span><br><span class="line">		    port: 8080</span><br><span class="line">		  &#125;,</span><br><span class="line">3、在package.json的scripts下添加  &quot;start&quot;: &quot;webpack-dev-server&quot;</span><br><span class="line">4、执行npm run start</span><br><span class="line">5、浏览器打开用localhost:8080</span><br><span class="line"></span><br><span class="line">注意：启动热替换之后，自动创新只能在浏览器端看到对应的效果，此时并没有更新到输出文件的本地，如果想更新到输出文件的本地，需要退出热替换状态，执行webpack更新到本地</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sql server复习</title>
    <url>/2020/05/30/sql%20server%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="SQL创建数据库"><a href="#SQL创建数据库" class="headerlink" title="SQL创建数据库"></a>SQL创建数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE 数据库名</span><br><span class="line">ON PRIAMRY</span><br><span class="line">(</span><br><span class="line">NAME&#x3D;数据的逻辑名称,</span><br><span class="line">FILENAME&#x3D;&#39;存储的位置&#39;,</span><br><span class="line">SIZE&#x3D;5mb,</span><br><span class="line">MAXSIZE&#x3D;20MB,</span><br><span class="line">FILEGROWTH&#x3D;20%,</span><br><span class="line">)</span><br><span class="line">LOG ON</span><br><span class="line">(</span><br><span class="line">NAME&#x3D;日志文件的逻辑名称,</span><br><span class="line">FILENAME&#x3D;&#39;存储的位置&#39;,</span><br><span class="line">SIZE&#x3D;5mb,</span><br><span class="line">MAXSIZE&#x3D;20MB,</span><br><span class="line">FILEGROWTH&#x3D;20%,</span><br><span class="line">)</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="SQL查看数据库"><a href="#SQL查看数据库" class="headerlink" title="SQL查看数据库"></a>SQL查看数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">EXEC sp_helpdb &#39;数据库名&#39;</span><br></pre></td></tr></table></figure>



<h2 id="SQL增加数据库容量"><a href="#SQL增加数据库容量" class="headerlink" title="SQL增加数据库容量"></a>SQL增加数据库容量</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE 数据库名</span><br><span class="line">GO</span><br><span class="line">ALTER DATABASE 数据库名</span><br><span class="line">MODIFY FILE</span><br><span class="line">(</span><br><span class="line">NAME&#x3D;原数据量文件名,</span><br><span class="line">SIZE&#x3D;新增的容量,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>





<h2 id="SQL创建表"><a href="#SQL创建表" class="headerlink" title="SQL创建表"></a>SQL创建表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO</span><br><span class="line">CERATE TABLE 班级</span><br><span class="line">（</span><br><span class="line">班级代码  varchar (9)  CONSTRAINT pk_bjdm PRIMARY KEY,</span><br><span class="line">班级名称  varchar (20) NOT NULL,</span><br><span class="line">专业代码  char (4) NOT NULL,</span><br><span class="line">系部代码  char (2) NOT NULL,</span><br><span class="line">备注  varchar(50)</span><br><span class="line">）</span><br></pre></td></tr></table></figure>



<h2 id="insert-SQL向表中添加数据"><a href="#insert-SQL向表中添加数据" class="headerlink" title="insert:SQL向表中添加数据"></a>insert:SQL向表中添加数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO</span><br><span class="line">INSERT 班级 values (&#39;060102002&#39;,&#39;06&#39;,&#39;软件技术&#39;,&#39;0102&#39;,&#39;01&#39;,&#39;&#39;)</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>



<h2 id="SQL查看表"><a href="#SQL查看表" class="headerlink" title="SQL查看表"></a>SQL查看表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO</span><br><span class="line">SELECT * from 班级</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>



<h2 id="alter-为表-add-新增-一列"><a href="#alter-为表-add-新增-一列" class="headerlink" title="alter:为表(add:新增)一列"></a>alter:为表(add:新增)一列</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO</span><br><span class="line">ALTER TABLE 学生</span><br><span class="line">ADD 家庭住址 varchar (30) NOT NULL</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>



<h2 id="alter-alter修改-表中的某字段"><a href="#alter-alter修改-表中的某字段" class="headerlink" title="alter:(alter修改)表中的某字段"></a>alter:(alter修改)表中的某字段</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO </span><br><span class="line">ALTER TABLE 学生</span><br><span class="line">ALTER COLUMN 家庭住址 varchar (50) NULL</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>



<h2 id="alter-drop-删除-表中某个字段"><a href="#alter-drop-删除-表中某个字段" class="headerlink" title="alter:(drop:删除)表中某个字段"></a>alter:(drop:删除)表中某个字段</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">alter table 系部</span><br><span class="line">drop column 系主任</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="insert-SQL数据的添加"><a href="#insert-SQL数据的添加" class="headerlink" title="insert:SQL数据的添加"></a>insert:SQL数据的添加</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">GO</span><br><span class="line">INSERT 系部		&#x2F;&#x2F;注意，如修改全部字段名，可以省略字段名</span><br><span class="line">（</span><br><span class="line">系部代码，系部名称，系主任</span><br><span class="line">）</span><br><span class="line">VALUES</span><br><span class="line">(&#39;01&#39;,&#39;计算机系&#39;,&#39;杨学全&#39;)</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>



<h2 id="update-SQL数据的修改"><a href="#update-SQL数据的修改" class="headerlink" title="update:SQL数据的修改"></a>update:SQL数据的修改</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE student</span><br><span class="line">go</span><br><span class="line">update 教学计划</span><br><span class="line">set 开始周&#x3D;2</span><br><span class="line">where 专业代码&#x3D;‘001’</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="delete-SQL数据的删除"><a href="#delete-SQL数据的删除" class="headerlink" title="delete:SQL数据的删除"></a>delete:SQL数据的删除</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">delete from 系部</span><br><span class="line">where 系部代码&#x3D;&#39;04&#39;</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="查询姓名与年龄"><a href="#查询姓名与年龄" class="headerlink" title="查询姓名与年龄"></a>查询姓名与年龄</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select 姓名,year(getdate())-year(出生日期) as 年龄</span><br><span class="line">from 学生</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="top-n-查询表中前三条记录"><a href="#top-n-查询表中前三条记录" class="headerlink" title="top n:查询表中前三条记录"></a>top n:查询表中前三条记录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select top 3 *</span><br><span class="line">from 课程注册</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="top-n-percent-查询表中前20-的记录-只找注册号-学号-课程号-教师编号"><a href="#top-n-percent-查询表中前20-的记录-只找注册号-学号-课程号-教师编号" class="headerlink" title="top n percent:查询表中前20%的记录(只找注册号 学号 课程号 教师编号)"></a>top n percent:查询表中前20%的记录(只找注册号 学号 课程号 教师编号)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select top 20 percent 注册号,课程号,教师编号</span><br><span class="line">from 课程注册</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="year-getdate-year-出生日期-lt-查询年龄小于或等于35岁的教师信息"><a href="#year-getdate-year-出生日期-lt-查询年龄小于或等于35岁的教师信息" class="headerlink" title="year(getdate())-year(出生日期)&lt;=:查询年龄小于或等于35岁的教师信息"></a>year(getdate())-year(出生日期)&lt;=:查询年龄小于或等于35岁的教师信息</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select * from 教师</span><br><span class="line">where year(getdate())-year(出生日期),&lt;&#x3D;35</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="between-and-查询出生日期在1971-1980年的教师编号，姓名，出入日期"><a href="#between-and-查询出生日期在1971-1980年的教师编号，姓名，出入日期" class="headerlink" title="between  and:查询出生日期在1971-1980年的教师编号，姓名，出入日期"></a>between  and:查询出生日期在1971-1980年的教师编号，姓名，出入日期</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select 编号,姓名,出生日期  from 教师</span><br><span class="line">where 出生日期 between &#39;1971-01-01&#39; and &#39;1980-12-31&#39;</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="in-查询计算机系，经济管理系的班级名称与班级编号"><a href="#in-查询计算机系，经济管理系的班级名称与班级编号" class="headerlink" title="in:查询计算机系，经济管理系的班级名称与班级编号"></a>in:查询计算机系，经济管理系的班级名称与班级编号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select 班级名称,班级编号</span><br><span class="line">from 班级</span><br><span class="line">where 系部代码 in(&#39;01&#39;,&#39;02&#39;)</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="like-查询姓刘学生的信息"><a href="#like-查询姓刘学生的信息" class="headerlink" title="like:查询姓刘学生的信息"></a>like:查询姓刘学生的信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select * from 学生</span><br><span class="line">where 姓名 like &#39;刘%&#39;</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="between-and-and-多重条件查询：查询1971-1980年之间的女教师"><a href="#between-and-and-多重条件查询：查询1971-1980年之间的女教师" class="headerlink" title="between and and:多重条件查询：查询1971-1980年之间的女教师"></a>between and and:多重条件查询：查询1971-1980年之间的女教师</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select * from 教师</span><br><span class="line">where 出生日期 between &#39;1970-01-01&#39; and &#39;1980-12-31&#39; and 性别&#x3D;&#39;女&#39;</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="count-查询学生总数"><a href="#count-查询学生总数" class="headerlink" title="count:查询学生总数"></a>count:查询学生总数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select count(*) as 总数 </span><br><span class="line">from 学生</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h3 id="avg-查询学生的平均年龄"><a href="#avg-查询学生的平均年龄" class="headerlink" title="avg:查询学生的平均年龄"></a>avg:查询学生的平均年龄</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use student</span><br><span class="line">go</span><br><span class="line">select avg(year(getdate())-year(出生日期)) as 平均年龄 from 学生</span><br><span class="line">go</span><br></pre></td></tr></table></figure>



<h2 id="约束的类型："><a href="#约束的类型：" class="headerlink" title="约束的类型："></a>约束的类型：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">primary key:主键约束</span><br><span class="line">1.不允许为空，可以存在多个列，只有建一个主键</span><br><span class="line"></span><br><span class="line">unique：唯一约束</span><br><span class="line">1.允许出现一个空，可以建多个</span><br><span class="line"></span><br><span class="line">not null:非空约束</span><br><span class="line">1.用来强制实现数据的完整性，设立的列不允许为空</span><br><span class="line"></span><br><span class="line">check:检查约束</span><br><span class="line">1.用来强制实现数据的完整性，使用逻辑表达式来限定列中可以接受的数据范围</span><br><span class="line"></span><br><span class="line">default:默认约束</span><br><span class="line">1：用来强制实现数据的完整性，为表中某列建立一个默认值</span><br><span class="line"></span><br><span class="line">foreign key:外键约束</span><br><span class="line">1.通过外键可以为相关联的两个表建立联系，实现数据的完整性</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>数据结构期末复习</title>
    <url>/2020/05/30/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="出栈操作"><a href="#出栈操作" class="headerlink" title="出栈操作"></a>出栈操作</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char pop(SqlStack *S)&#123;</span><br><span class="line">    char x;</span><br><span class="line">    if(StackEmpty(s))&#123;</span><br><span class="line">    printf(&quot;下溢&quot;);</span><br><span class="line">    exit(0);</span><br><span class="line">    &#125;</span><br><span class="line">    x&#x3D;S-&gt;data[S-&gt;top];</span><br><span class="line">    S-&gt;top--;</span><br><span class="line">    return x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="一棵二叉树以二叉链表为存储结构，写出求此二叉树中叶子结点个数的算法。"><a href="#一棵二叉树以二叉链表为存储结构，写出求此二叉树中叶子结点个数的算法。" class="headerlink" title="一棵二叉树以二叉链表为存储结构，写出求此二叉树中叶子结点个数的算法。"></a>一棵二叉树以二叉链表为存储结构，写出求此二叉树中叶子结点个数的算法。</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int sum&#x3D;0;</span><br><span class="line">void leaft(BiTree T)&#123;</span><br><span class="line">	if(T)&#123;</span><br><span class="line">		if(T-&gt;lchild&#x3D;&#x3D;NULL &amp;&amp; T-&gt;rchild&#x3D;&#x3D;NULL)sum++;</span><br><span class="line">		leaft(T-&gt;lchild);</span><br><span class="line">		leaft(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="一棵二叉树以二叉链表为存储结构，写出求二叉树结点总数的算法"><a href="#一棵二叉树以二叉链表为存储结构，写出求二叉树结点总数的算法" class="headerlink" title="一棵二叉树以二叉链表为存储结构，写出求二叉树结点总数的算法"></a>一棵二叉树以二叉链表为存储结构，写出求二叉树结点总数的算法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int sum&#x3D;0;</span><br><span class="line">void cound(BiTree root)&#123;</span><br><span class="line">    if(root)&#123;</span><br><span class="line">		sum++;</span><br><span class="line">		cound(root-&gt;lchild);</span><br><span class="line">		cound(root-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/2020/05/28/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h3 id="我的第一个博客"><a href="#我的第一个博客" class="headerlink" title="我的第一个博客"></a>我的第一个博客</h3><h4 id="网上找的笔记"><a href="#网上找的笔记" class="headerlink" title="网上找的笔记"></a>网上找的笔记</h4><p>安装Nodejs<br>node -v #查看node版本<br>npm -v #查看npm版本<br>npm install -g cnpm –registry=<a href="http://registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a> 安装淘宝的cnpm 管理器<br>cnpm -v #查看cnpm版本<br>cnpm install -g hexo-cli 安装hexo框架<br>hexo -v 查看hexo版本<br>mkdir blog 创建blog目录<br>cd blog 进入blog目录<br>sudo hexo init 生成博客 初始化博客<br>hexo s 启动本地博客服务<br><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 本地访问地址<br>hexo n “我的第一篇文章” 创建新的文章<br>返回blog目录<br>hexo clean 清理<br>hexo g 生成<br>Github创建一个新的仓库 YourGithubName.github.io</p>
<h6 id="cnpm-install-–save-hexo-deployer-git-在blog目录下安装git部署插件"><a href="#cnpm-install-–save-hexo-deployer-git-在blog目录下安装git部署插件" class="headerlink" title="cnpm install –save hexo-deployer-git #在blog目录下安装git部署插件"></a>cnpm install –save hexo-deployer-git #在blog目录下安装git部署插件</h6><h6 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="#配置_config.yml"></a>#配置_config.yml</h6><h6 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h6><h6 id="Docs-https-hexo-io-docs-deployment-html"><a href="#Docs-https-hexo-io-docs-deployment-html" class="headerlink" title="Docs: https://hexo.io/docs/deployment.html"></a>Docs: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a></h6><p>deploy:<br>type: git<br>repo: <a href="https://github.com/YourGithubName/YourGithubName.github.io.git" target="_blank" rel="noopener">https://github.com/YourGithubName/YourGithubName.github.io.git</a></p>
<h6 id="branch-master"><a href="#branch-master" class="headerlink" title="branch: master"></a>branch: master</h6><p>hexo d #部署到Github仓库里<br><a href="https://YourGithubName.github.io/" target="_blank" rel="noopener">https://YourGithubName.github.io/</a> #访问这个地址可以查看博客</p>
<p>git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia #下载yilia主题到本地</p>
<p>#修改hexo根目录下的 _config.yml 文件 ： theme: yilia</p>
<p>hexo c #清理一下<br>hexo g #生成<br>hexo d #部署到远程Github仓库<br><a href="https://YourGithubName.github.io/" target="_blank" rel="noopener">https://YourGithubName.github.io/</a> #查看博客</p>
<h2 id="hexo主题网址：https-hexo-io-themes"><a href="#hexo主题网址：https-hexo-io-themes" class="headerlink" title="hexo主题网址：https://hexo.io/themes/"></a>hexo主题网址：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></h2><h3 id="自己写的笔记"><a href="#自己写的笔记" class="headerlink" title="自己写的笔记"></a>自己写的笔记</h3><p>1、安装node.js</p>
<p>2、用npm安装cnpm。    npm install -g cnpm –registry=<a href="http://registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a></p>
<p>3、全局安装hexo框架。    cnpm install -g hexo-cli</p>
<p>4、在你想要的文件夹下运行  sudo hexo init。初始化博客</p>
<p>5、运行博客hexo s。会生成一个<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 地址</p>
<p>6、hexo n  “标题” 新建一个页面；</p>
<p>注意：每新建一个页面，要运行之前先都需要先清理（hexo clean）、再生成（hexo g）、再运行（hexo s）：</p>
<p>7、部署到自己的github上去，先在github新建一个项目，名字前缀必需要跟自己的账户名相同，</p>
<p>如我的github账户名为<a href="https://github.com/huang-hhy" target="_blank" rel="noopener">huang-hhy</a>，新建的项目名字<a href="https://github.com/huang-hhy/huang-hhy.github.io" target="_blank" rel="noopener">huang-hhy.github.io</a></p>
<p>8、安装git部署：cnpm install –save hexo-deployer-git </p>
<p>9、修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">###### Deployment</span><br><span class="line">###### Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: https:&#x2F;&#x2F;github.com&#x2F;YourGithubName&#x2F;YourGithubName.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>

<p>10、hexo d提交到github上去，运行huang-hhy.github.io即可访问</p>
<p>11、（1）修改主题：git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</p>
<p>​        （2）git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git" target="_blank" rel="noopener">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p>
<p>12、修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: yilia</span><br></pre></td></tr></table></figure>

<p>npm install hexo-renderer-pug hexo-renderer-stylus –save or yarn add hexo-renderer-pug hexo-renderer-stylus</p>
<h3 id="yilia主题优化"><a href="#yilia主题优化" class="headerlink" title="yilia主题优化"></a>yilia主题优化</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置图片资源：</span><br><span class="line"></span><br><span class="line">   添加图片资源文件夹。 路径为 themes&#x2F;yilia&#x2F;source&#x2F;下，可添加一个 assets 文件夹，里面存放图片资源即可</span><br><span class="line"></span><br><span class="line">    配置文件中直接引用即可。路径为 themes&#x2F;yilia&#x2F;_config.yml，找到如下即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 微信二维码图片</span><br><span class="line"></span><br><span class="line">    weixin:  &#x2F;assets&#x2F;img&#x2F;wechat.png</span><br><span class="line"></span><br><span class="line">    # 头像图片</span><br><span class="line"></span><br><span class="line">    avatar:  &#x2F;assets&#x2F;img&#x2F;head.jpg</span><br><span class="line"></span><br><span class="line">    # 网页图标</span><br><span class="line"></span><br><span class="line">    favicon:  &#x2F;assets&#x2F;img&#x2F;head.jpg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">文章如何显示摘要：</span><br><span class="line"></span><br><span class="line">    问题。点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数</span><br><span class="line"></span><br><span class="line">    解决办法。 在你 MD 格式文章正文插入 &lt;!-- more --&gt;即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下 themes&#x2F;yilia&#x2F;_config.yml里的  # excerpt_link: more</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">文章显示目录：</span><br><span class="line"></span><br><span class="line">	增加文章目录 TOC(table of content )，方便阅读文章, 在 themes&#x2F;yilia&#x2F;_config.ym中进行配置</span><br><span class="line">    toc: 2即可。</span><br></pre></td></tr></table></figure>

<p>menu:<br>  主页: / || fa fa-home<br>  档案: /archives/ || fa fa-archive<br>  标签: /tags/ || fa fa-tags<br>  分类目录: /categories/ || fa fa-folder-open<br>  链接: /link/ || fa fa-link<br>  关于: /about/ || fa fa-heart<br>  清单||fa fa-list:<br>    - Music || /music/ || fa fa-music<br>    - Movie || /movies/ || fa fa-film</p>
]]></content>
  </entry>
  <entry>
    <title>IT项目管理练习题md</title>
    <url>/2020/07/03/IT%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E7%BB%83%E4%B9%A0%E9%A2%98md/</url>
    <content><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>1．什么是项目？它有什么特点？<br>项目是特殊的将要被执行的有限任务，是在一定时间内，满足一些列特定目标的相关工作的组合。<br>特点：一次性工作，有明确的范围，有时间限制，使用一些资源，有明确的目标。<br>2．  理解IT项目的利益相关者。<br>政府，投资方，债权人，客户，员工，供应商</p>
<p>3．项目管理的定义和项目管理的要素是什么？<br>定义：项目管理就是以项目为对象的系统管理方法，通过临时性的、专门的柔性组织，对项目进行高效率的计划、组织、指导（领导）和控制，以实现项目全过程的动态管理和项目目标达成的综合协调与优化。<br>要素：（1）制定好计划（2）建立好组织（3）配备好资源（4）监控执行（5）总结提高<br>4．IT项目的概念。</p>
<p>以信息技术（计算机、通讯、网络、微电子等）为基础进行开发的项目，如电子商务、企业信息化、数字城市、物联网应用等等。它本身是项目，具备一般项目的基本特征。<br>5．  国际上主要的两大项目管理知识体系是什么？<br>（1）美国的项目管理学会PMI project management insitute:PMBOK的九大知识领域  认证PMP证书<br>（2）国际项目管理协会IPMA iternational project management association，认证IPMP证书<br>分为四个等级：A高级项目经理 B项目经理 C项目管理专家 D项目管理专业人员<br>九大类：项目范围管理、项目质量管理、项目风险管理、项目时间管理、项目人力资源管理、项目采购管理、项目费用管理、项目沟通管理、项目整体管理<br>五个阶段：开始、计划、执行、监控、结束<br>6．  软件项目的主要特点是什么？<br>（1）项目目标的不准确性<br>（2）需求的多变性<br>（3）项目功能的渐变行<br>（4）项目时间的不确定性<br>（5）项目风险的不确定性<br>（6）智力劳动密集性<br>7．  理解PMBOK结构图。<br>8．  理解项目管理的本质<br>时间、成本和产品量之间的平衡以达成项目的任务目标</p>
<p>9．  IT项目管理的体系组成。</p>
<h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>1．  在启动阶段，IT项目经理的任务主要有哪些？<br>（1）熟悉项目背景<br>（2）了解利益相关者<br>（3）研究商业需求和项目功能<br>（4）初步确定项目范围<br>（5）给出项目预算<br>（6）指定项目章程<br>2．IT项目的调研方法有哪些？（现有及历史资料收集、调查问卷、用户访问、实地考察）<br>委托专业公司、专家咨询<br>3．  理解IT项目预算的组成。<br>（1）考虑完成项目每个阶段所用的满负荷工作量<br>（2）专业服务成本<br>（3）设备成本<br>（4）生产附加成本（办公费，用户手册，著作权和专利申请）<br>（5）考虑存储金<br>4． 如何对IT项目的可行性进行分析？<br>四个方面：<br>① 经济可行性：成本/效益分析，经济角度判断系统开发是否合算<br>② 技术可行性(做得了吗，做得好吗)：进行技术风险评估。从开发组织的技术实力、以往工作基础、问题复杂性等出发，判断系统开发在时间、费用等限制条件下技术层面的可能是（最难决断和最关键的问题）。包括：<br>A 实现风险分析：给定的限制范围内，能否实现<br>B 资源分析：研究开发系统的人员是否存在问题、分析可用于建立系统的其他资源如硬件软件等<br>C 技术发展分析：系统技术是否符合相关IT技术的发展<br>③ 外部环境可行性：如法律可行性、政策法规可行性<br>系统开发过程可能涉及的各种合同、侵权、责任和法律相抵触的问题<br>④ 管理和操作的可行性。<br>操作可行性：操作方式在用户组织内是否行得通</p>
<p>从中选出最适合的可行性方案</p>
<p>5．  理解货币的时间价值及其相关的概念。</p>
<p>6．  IT项目的章程的主要作用是什么？<br>（1）项目章程明确地给出了项目的定义<br>（2）确定了项目的特点和最终结果，<br>（3）规定项目经理对项目负责<br>（4）授权项目，从项目发起人的角度分配项目经理的权利。<br>7．如何编写IT项目的章程？它有哪些组成要素？<br>项目的正式名称、项目发起人、项目经历、项目目标、项目展开的原因、项目成果、项目基本时间安排、项目资源<br>8．  IT项目启动的过程有哪些？启动会议的作用是什么？<br>需求识别、项目识别、项目研究、项目决策、项目立项、启动会议<br>启动会议的作用：<br>（1）阐述项目背景、价值、目标<br>（2） 项目交付物(成果)介绍<br>（3）项目组织机构及主要成员职责介绍<br>（4）项目初步计划与风险分析<br>（5） 项目管理制度<br> （6）项目成员将要使用的工作方式（全职或兼职）</p>
<h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><ol>
<li>什么项目的范围管理，其主要包括哪些过程？<br>项目范围管理是指对项目包括什么与包括什么的定义与控制的过程。<br>范围包括两个方面、一个是产品范围，即产品和服务应该包含那些功能和特性。另一个是项目范围，即要完成产品和服务要完成的工作。<br>主要过程有<br>（1）范围计划编制<br>（2）范围定义<br>（3）范围核实<br>（4）范围变更控制</li>
<li>编写工作约定书或工作说明书，主要包括哪些内容？<br>输入：项目章程（目标）、项目概述（项目约束、项目条件假设）</li>
<li>项目目标必项的符合SMART原则的含义。</li>
</ol>
<p>明确、可行、具体和可以度量<br>4. 什么是WBS?其设计方法有哪几种？设计原则是什么？</p>
<p>项目范围定义就是将主要的可交付成果分解为更小容易管理的单元，项目范围定义的输出就是工作分解结构WBS</p>
<p>（1）WBS是一个分级的树形结构，它是将项目按照其内在结构或时间顺序逐级分解而形成的结构示意图。它能把项目分成相对的独立、内容单一、易于控制与核算检查的项目单元，并能把项目单元在项目中的位置与构成直观地表示出来。</p>
<p>（2）设计的方法</p>
<p>类比法、自上而下法、自下而上法</p>
<p>（3）原则</p>
<p>【1】各层次上保持项目的完整性，避免遗漏工作单元【2】一个工作单元只能属于一个上级单元避免交叉【3】项目单元能区分不同的责任人和工作内容【4】项目单元应方便工期成本质量等的控制【5】详略得当<br>5. 理解需求变更管理的过程。<br>（1）记录变更日志<br>（2）分析变更对产品的影响（质量）<br>（3）估计变更后的工作量、重新估计交付成果的进度<br>（4）估计变更后的成本增加或减少<br>（5）得出评审结果<br>（6）如果评审通过，则修改软件使其与变更的需求一致<br>（7）如果评审未通过，则将变更请求表等响应文档存档。</p>
<h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><ol>
<li><p>项目时间管理由哪些过程组成？过程间关系是怎么样的？<br>（1）活动定义–指定一些特定的工作。<br>（2）活动排序–明确各活动间的相互联系性<br>（3）活动时间估计–估计各活动所需要的时间<br>（4）进度计划编制–分析活动安排顺序、活动所需时间和资源以做出项目进度计划<br>（5）进度控制–控制项目进度变化</p>
</li>
<li><p>活动定义的输入、工具与方法、输出都有哪些要素？</p>
</li>
<li><p>活动排序的依赖关系有哪三种？了解其含义。<br>（1）强制依赖关系（内在的相关性）：内在相关性是指，活动之间固有的依赖性，通常是由客观条件限制造成的<br>（2）自由依赖关系（指定性相关性）：相关管理团队所规定的相关性<br>（3）外在依赖关系（与外部相关性）：本项目活动与外部活动间的相关性</p>
</li>
<li><p>理解项目网络图及其作用。理解正向遍历和反向遍历的计算方法。<br>项目网络图是指项目所有活动以及他们之间逻辑关系的图解表示<br>正向遍历：是从活动开始到结束的顺序遍历网络中的每个活动进行遍历，可以执行正向遍历来计算出每个活动最早开始和<br>反向遍历：和正向遍历相反，按照活动结束到活动开始的倒序对网络中的每个活动进行遍历</p>
</li>
<li><p>理解关键路径法</p>
</li>
<li><p>理解历时估计的IPO图。</p>
</li>
<li><p>项目进度计划编制的参考依据有哪些？<br>【1】项目网络图【2】活动时间估计【3】获得的资源【4】作业制度安排【5】约束条件</p>
</li>
<li><p>简述进度计划编制的工具和方法。<br>（1）最常用的数学方法有：CPM（关键路径法）\PERT法<br>（2）时间压缩法：是一种数学分析的方法，包括缩短关键路径的历时、应急法<br>（3）平行作业法–平行地做活动，这些活动通常要按前后顺序进行、导致返工和增加风险<br>关键路径法：一条路径中，每个工作的时间之和等于工程工期，这条路就是关键路径</p>
</li>
<li><p>理解用PERT法进行项目周期的估算。<br>PERT认为整个项目的完成时间是各个活动完成时间之和，且服从正态分布。<br>按三种不同情况估计：<br>乐观时间——任何事情都顺利完成，完成某项工作的时间<br>最可能时间——正常情况下，完成某项工作的时间<br>悲观时间——最不利的情况，完成某项工作的时间</p>
</li>
</ol>
<p>期望 t = （乐观时间 + 4*最可能时间 +悲观时间）/6<br>方差 = （悲观时间-乐观时间）^2/36</p>
<p>第五章</p>
<ol>
<li>IT项目成本管理由哪些过程组成？理解各过程的含义。<br>资源计划、成本估算、成本预算、成本控制、工作总结</li>
<li>软件项目的开发成本与一般物理产品成本的差异有哪两点？<br>软件开发成本是指开发过程中所花费的工作量及相应的代价，<br>【1】基本不包括原材料和能源的消耗、主要是人的劳动的消耗。<br>【2】不存在重复制造过程，它的开发成本是以一次性开发过程所花费的代价来计算的</li>
<li>理解机会成本、沉没成本、边际成本的概念。<br>直接成本：项目中容易追踪的相关成本<br>间接成本：不能以经济方式或直接方式追踪的成本，如电和水<br>沉没成本：过去已经花费的成本<br>机会成本：也叫择一成本，是指利用某种资源生产某种商品所放弃的利用统一资源做另一商品的价值。<br>边际成本：缩短单位时间，提高单位产量或提高单位质量所花费的成本<br>固定成本：指厂商在短期内无法改变的固定投入，比如厂房、利息<br>可变成本：指厂商在短期内可以改变的投入，比如生产人员工资</li>
<li>能应用盈亏平衡公式进行实例分析和计算。</li>
</ol>
<ol start="5">
<li><p>理解项目的资源计划主要输出－资源清单和资源计划矩阵图。<br>资源计划涉及决定什么样的资源、多少资源将用于项目的每一工作的执行过程中</p>
</li>
<li><p>什么是成本估算和成本预算？掌握软件项目的成本估算方法。<br>成本估算：计算完成项目所需各种资源成本的近似值<br>成本预算：包括分配给每一独立工作的全部费用，以获得度量项目执行的费用<br>（1）类比估计法：与原有的类似已执行项目进行类比以估计当期项目的费用<br>（2）参数模型法：将项目的特征参数作为预测成本的数学模型的基本参数<br>（3）累计估计<br>（4）计算机软件</p>
</li>
<li><p>通过实例掌握成本预算的方法。<br>成本预算主要分三个部分：<br>① 直接人工费用预算<br>② 辅助服务费用预算<br>③ 采购设备及物品费用预算</p>
</li>
<li><p>理解挣值分析的概念，能使用BCWS、ACWP、BCWP、EAC公式进行实例的成本控制分析。</p>
</li>
<li><p>了解软件项目的成本管理措施。<br>（1）通过估算和预算项目的总成本<br>（2）定期的工作进度和工作内容检查与评审<br>（3）通过合理的激励方式来提高员工的积极性<br>（4）外包某一技术难点或引进第三方技术<br>（5）通过远程沟通降低差旅费用<br>第六章</p>
</li>
<li><p>质量的定义是什么？ IT项目质量管理过程有哪些？理解其含义。<br>质量的定义：反映实体明确和隐含需求能力的特性综合<br>明确需要指合同中用户明确提出的要求和需要，隐含需求是生产企业通过市场调研和行为识别探明的要求或需要，特性，软件特有的性质，反映了实体满足需要的能力<br>IT项目质量管理过程。<br>过程：<br>1、质量计划——确定哪些质量标准适用于该项目，并决定如何算达标<br>2、质量保证——对项目整体绩效进行预算评估（上线前的质量评审），保证该项目能够达到有关质量标准<br>3、质量控制——监控特定项目的执行结果（软件输出结构测试），以确定它们是否符合有关的质量标准，并确定适当方式消除导致项目绩效令人不满意的原因</p>
</li>
<li><p>理解质量计划、质量保证和质量控制的含义。<br>（1）质量计划，确定那些质量标准适合该项目，并决定如何算达标<br>（2）质量保证，对项目的整体绩效进行预估，确保能够达到有关质量标准<br>（3）质量控制，监控项目的执行结果确定他们是否符合标准，确定适当的方式消除导致项目绩效不令人满意的原因</p>
</li>
<li><p>理解软件项目的质量保证的行为,即理解软件评审的角色。<br>质量保证：对整体项目绩效进行预先的评估、以确保项目能够满足相关的质量标准。<br>主要活动包括过程评审和产品审计<br>过程评审和产品审计是确保软件项目过程的各个阶段和各个方面，采取各项措施来保证和提高产品质量<br>角色：主持人、内审员、作者、技术专业人员、记录员、列席人员。</p>
</li>
<li><p>了解项目的质量责任。<br>项目经理对项目的质量负责<br>执行任务的具体员工负根本责任</p>
</li>
<li><p>质量控制过程的工具和方法、输出有哪些？<br>工具和方法：<br>（1）帕累托分析：确认造成系统质量问题的诸多因素中最为重要的几个因素<br>（2）质量控制图：是质量过程数据的时序图形表示<br>（3）IT系统的测试<br>输出<br>质量提高、可接受的决定，返工、完成后的审验单、过程调整</p>
</li>
<li><p>什么是帕累托分析、了解质量控制图的七点运行法则。<br>帕累托分析：确认造成系统质量问题的诸多因素中最为重要的几个因素<br>A类为关键的少数、占影响因素的累计百分比百分之70到80<br>B类为一般的因素，占影响因素的累计百分比百分之80到90<br>C类为次要因素，占影响因素的累计百分比百分之90到 100<br>七点运行法则：如果连续的七个点【1】都在平均线以上或者平均线一下【2】连续上升或者连续下降，那么这个过程可能存在非随机问题</p>
</li>
<li><p>理解测试和含义和软件测试流程图。<br>（1）软件测试是控制软件质量的关键步骤，是对软件系统规格说明、测试和编码的最后复审。<br>（2）测试是为了发现错误而执行程序的过程<br>（3）测试是为了证明程序有错，而不是证明程序无错<br>（4）一个好的测试是它发现至今未发现的错误</p>
</li>
<li><p>提高IT项目质量的建议有哪些？<br>（1）强有力的领导<br>（2）理解质量成本<br>（3）提供良好的工作环境<br>（4）努力提高组织在软件开发和项目管理方面的整体成熟度水平。</p>
</li>
<li><p>CMM有哪五个等级？理解其含义。<br>初始级 ：软件生产过程的特征是随机的，有时甚至是杂乱的。很少过程被定义，成功依赖于个人的努力。<br>可重复级 ：建立基本的项目管理过程，以跟踪费用、进度和功能。设定必要的过程纪律以重复以往在相同应用的项目的成功。<br>已定义级 ：管理和软件过程已文档化、标准化和集成化到一个标准的组织软件过程。组织内所有的项目使用的软件过程是集体同意、裁剪过的标准开发。<br>已管理级 ：详细的软件过程和产品质量的特征已被收集。软件过程和产品已被定量管理和控制。<br>优化级 ：能自觉利用各种经验和来自新技术、新思想的先导试验而产生的定量反馈信息，不断改进和优化组织统一的标准软件过程。<br>第七章</p>
</li>
<li><p>IT项目人力资源管理的定义和过程。<br>项目人力资源管理就是有效地发挥每个参与项目人员作用的过程包括<br>（1）组织的计划编制<br>（2）人员获取<br>（3）团队建设</p>
</li>
<li><p>理解马斯洛的层次需求理论和赫兹伯格双因素理论。<br>马斯洛的层次需求理论<br>【1】生理的需求，维持人类自身生命的需求，如事物、水、衣食住行<br>【2】安全的需求，避免人身危险，不受到失去衣食住行的威胁<br>【3】社交的需求，需要有所归属并被承认<br>【4】尊重的需求，收到尊重，产生诸如权利、声望地位等方面的满足<br>【5】自我实现的需求，充分发挥个人的潜在能力并有所成就的愿望<br>赫兹伯格的双因素理论<br>保健因素：是指那些与人类不满情绪有关的因素，比如企业政策，薪资待遇，工作环境，人际关系<br>激励因素：是指与人们满意情绪有关的因素，比如工作上的表现机会，成就感，奖励，期望。</p>
</li>
<li><p>理解项目经理的九条影响力，使用哪些影响力，项目更容易成功（导致失败）？<br>【1】权利【2】任务【3】预算【4】提升【5】资金【6】处罚【7】专业能力【8】工作挑战【9】友谊<br>使用专家知识和工作挑战容易成功、使用权利、金钱、处罚容易失败</p>
</li>
<li><p>组织计划编制的输出结果有哪些？<br>项目组织结构图、定义和分配工作、责任分配矩阵、资源直方图</p>
</li>
<li><p>理解软件项目的组织结构图,责任分配矩阵和人员配置计划。</p>
</li>
<li><p>如果你是项目经理，如何减少项目组人员异动？<br>（1）重视员工的感受，需求<br>（2）承认每个员工的成果<br>（3）技术培训<br>（4）融洽的组织氛围<br>（5）加薪<br>（6）合理分配员工任务</p>
</li>
<li><p>分析人员获取中的内部招聘和外部招聘的优缺点。<br>内部招聘优点：（1）能够鼓舞员工士气,防止人才外流（2）企业对员工的能力有很好了解,很少出现用错人的情况（3）员工对企业的情况比较熟悉,容易上手开展工作,需要的培训也比较少（4）员工对企业的目标更有认同感,并且不容易辞职（5）节省招聘费用.<br>内部招聘缺点：（1）那些申请了职位而没有被录用的员工的积极性可能会守到打击（2）在空缺职位的候选人已经内定的情况下,还要与所有的申请人逐一面试,无疑是在浪费时间（3）可能会引起妒忌.攀比等心理问题,或引发拉帮结派等派生问题（4）被提升的人会面临艰难的角色转换问题,特别是在过去的同事.朋友成为下级的情况下（5）最大的缺点是近亲繁殖,被提拔的人缺乏创造性.</p>
</li>
</ol>
<p>外部招聘优点：（1）人员选择范围广泛。（2）外部招聘有利于带来新思想和新方法。（3）大大节省了培训费用。（4）有利于企业的发展和创新，避免企业内部的近亲繁殖。（5）有利于了解外部信息，树立企业形象。（6）产生鲶鱼效应，激发内部员工的斗志和潜能。（7）有利于平息和缓和内部竞争者之间的紧张关系。<br>外部招聘缺点：（1）外部招聘选错人的风险比较大。（2）需要更长的培训和适应阶段。（3）内部员工可能感到自己被忽视。（4）外部招聘可能费时费力。（5）甄选时间较长，决策难度大。（6）成本较高。（7）新员工角色进入慢 。（8）影响内部员工的积极性。</p>
<ol start="8">
<li><p>理解如何进行项目的资源平衡。<br>就是通过延迟项目任务来解决资源冲突问题，资源平衡的主要目的是合理分配有用资源，解决资源超负荷问题</p>
</li>
<li><p>理解好的团队特征。<br>（1）共同认可的明确目标<br>（2）合理的分工与协作<br>（3）成员积极的参与<br>（4）互相信任<br>（5）良好的沟通氛围<br>（6）高度的凝聚力与民主氛围<br>（7）学习是一种经常化的活动</p>
</li>
<li><p>团队生命周期五个典型阶段是哪些？<br>形成期、振荡期、规范期、成熟期、重组期<br>第八章</p>
</li>
<li><p>什么是风险和风险管理，风险管理有哪些过程？详细理解风险管理的各个过程。<br>风险：是指结果的不确定性，或者说是一定时期可能发生的各种结果间的差异。风险是损害和损害暴露度两种因素的综合。<br>IT项目风险管理：为了更好地达到项目的目标，分析识别应对项目周期内风险的科学与艺术。<br>过程：<br>（1）风险识别：确定哪种风险可能影响到IT项目<br>（2）风险量化<br>（3）风险应对计划<br>（4）风险监控</p>
</li>
<li><p>什么是风险识别？其常用方法的哪些？<br>确定那种风险可能会影响到IT项目<br>专家调查法（德尔菲法、头脑风暴法【集思广益法】），流程图法<br>德尔菲法主要靠专家的直观能力对风险进行识别，即通过调查意见逐步集中，直至在某种程度上达到一致</p>
</li>
<li><p>什么是风险量化？理解期望货币值（EMV）分析法。<br>风险量化：又成为风险预测，对已识别的风险进行估计和评价，风险估计的主要任务是确定风险发生的概论与后果，风险评价则是确定处理该风险的经济意义及费与效分析，风险管理的成本一般不应超过潜在的收益。<br>量化风险的工具和技术包括<br>（1）期望货币值（EMV）：风险值=风险概率*风险影响值（收益结果）<br>（2）计算风险因子<br>（3）计划评审技术（PERT）<br>（4）模拟（蒙特卡罗分析）法<br>（5）专家判断（主要是德尔菲法）</p>
</li>
<li><p>常用的风险应对措施有哪四种方法？<br>（1）风险减轻法，即主动采取措施（概率和影响）中和风险或采用紧急方案降低风险。<br>（2）风险规避。通过变更项目计划（增加时间）消除风险或风险的触发条件，使目标免受影响。又如设计时就进行设计评审，规避性能测试时产生的问题。<br>（3）风险转移。如让第三方开发或使用其技术作为替代方案。<br>（4）接受风险，当风险量不大时可以余留风险。</p>
</li>
<li><p>风险应对计划的结果包括哪些内容？<br>（1）风险管理计划：管理整个项目过程中所出现风险的程序<br>（2）风险应急计划：当已识别风险事件发生时，项目团队将采取的预先确定的措施。<br>（3）风险应急储备：项目发起人为了应付项目范围或质量上可能发生的变更而持有的预备资金。</p>
</li>
<li><p>风险监控的含义是什么？什么是RMMP?<br>风险监控：包括对风险发生的监督和对风险管理的监督，前者是对已识别的风险源进行识别和控制，后者是在项目实施过程中监督员工认真地执行风险管理的措施。</p>
</li>
</ol>
<p>RMMP（Risk Monitoring and Management Plan, 风险驾驭与监控计划）<br>7.  理解“十大风险事项跟踪”方法。<br>第九章</p>
<ol>
<li><p>理解沟通的重要性，项目经理的沟通模式<br>（1） 组织外部的良好沟通是组织与外部合作、和谐共处，并取得外部支持与帮助的润滑剂，也是获得外部环境信息和进行决策的依据。<br>（2）组织内部的良好沟通，可以改进管理，改善项目组织内部人际关系，使内部职能有效地衔接，从而形成组织合力，较好地发挥整体力量。<br>（3）好的沟通可以激励人，鼓舞人的士气。<br>（4）有效的沟通，可以消除误会，增进了解，化解矛盾，增强团队凝聚力。<br>（5）通过沟通，与项目干系人进行有效的交互，调整项目的资源和进度。</p>
</li>
<li><p>沟通计划的主要内容有哪些？<br>（1）项目文件的保存与读取方式<br>（2）统一项目文件格式<br>（3）项目组成员的联系方式<br>（4）工作汇报方式<br>（5）与项目干系人进行沟通分析</p>
</li>
<li><p>理解沟通的层次、方式和渠道。<br>层次：<br>（1）低层次的沟通：自我防卫型，双方相互防卫力求无懈可击，不是有效的沟通，收获很小<br>（2）中层次的沟通：彼此尊重型，为了避免冲突保持礼貌，没有完全的开诚公布，双方互有得失。<br>（3）高层次的共同：集思广益型，尊重差异，取长补短<br>方式<br>（1）正式沟通和非正式沟通<br>（2）向上沟通、向下沟通和平行<br>（3）单向沟通和双向沟通<br>（4）书面沟通和口头沟通<br>（5）语言沟通与体语沟通<br>渠道<br>最常用的是全通道模式</p>
</li>
<li><p>德鲁克的信息传送四个法则的含义。<br>（1）沟通是一种感知<br>（2）沟通是一种期望<br>（3）沟通产生要求<br>（4）信息不全是沟通</p>
</li>
<li><p>了解实施报告的种类。<br>绩效报告：为了取得项目的目标，如何使用资源<br>状态报告：项目在某一特定时间点上所处的位置<br>进度报告：某一特定时间内完成的工作</p>
</li>
</ol>
<p>定期报告<br>阶段审查<br>紧急报告<br>6.理解ERP项目周例会文档的样式与内容。<br>汇报人、汇报日期<br>本周完成工作事项<br>问题记录<br>本周交付物<br>风险评估<br>双周计划<br>第十章<br>1.IT项目采购管理主要过程有哪些？</p>
<p>采购计划编制、询价计划编制、询价、承包商选择、合同管理、合同收尾<br>2.  什么是SOW？<br>工作说明书是对要完成工作的描述，SOW详细地描述了工作，以便让潜在的供应商决定他们能否提供所需的产品和服务，以及确定一个适当的价格。<br>工作范围、工作地点、执行期限、可交付成果时间表、适用标准、验证标准、特殊要求<br>3.  项目的采购计划包括的什么内容?<br>决定是否要采购，如何去采购，采购什么，采购多少，何时采购<br>4. 什么是询价计划和询价？最常见的两种询价文件是什么？它们有什么区别？<br>询价计划：包括拟采购所需产品的相关文件（询价单和规格，SOW），识别潜在供应商<br>询价：包括报价（乙方）、标书（乙方）、出价（甲方）、或合适的工作建议书。<br>最常见的两种询价文件是RFP（request of proposal）征求建议书和报价邀请书（RFQ，request for quotation ）。<br>RFP是一种用于征求潜在卖方建议书的文件。即发单人向数家承包商征求解决方案建议时，向外招标发放的一种文件<br>5. 如何评估ERP供应商？</p>
<ol start="6">
<li>理解合同的管理和合同收尾含义。<br>（1）合同管理，包括处理与卖方的关系。这个过程包括监督合同的履行、进行支付、合同修改。到合同管理过程结束的时候，项目组期望乙方的工作已经完成。<br>（2）合同收尾，即合同的完成和结算，包括任何未决定事宜的解决。这个过程通常包括产品审核、正式验收和收尾、以及合同审计。</li>
</ol>
<p>第十一章</p>
<ol>
<li>什么是IT项目的整体管理？其过程有哪些？<br>项目整体管理包括在软件生命周期中协调所有其他项目管理知识领域涉及的过程<br>过程：项目计划制定、项目计划执行、整体变更控制。</li>
<li>如何进行项目干系人分析？</li>
</ol>
<p>项目干系人分析纳入项目计划</p>
<p>项目干系人分析要记录有关干系人的一些重要（敏感）的信息</p>
<p>（1）干系人姓名，所处单位及其职位</p>
<p>（2）在项目中的角色</p>
<p>（3）项目干系人的实际情况（兴趣和爱好）</p>
<p>（4）利益大小以及对项目的影响程度</p>
<p>（5）与干系人进行有效沟通的建议<br>3. 项目计划执行过程需要的工具和技术有哪些？<br>（1）工作授权系统： 确保合格的人在正确的时间内，以一定的次序进行授予权限的工作。（OA中代理人及其责任问题）<br>（2）状态审查会议：状态审查会议是用来交流项目信息的定期会议（周例会、阶段性会议）。<br>（3）项目管理软件： 是帮助管理项目的专门软件(PROJECT等等)。</p>
<ol start="4">
<li><p>理解变更控制系统的组成<br>整体变更控制：在项目生命周期的整个过程中对变更的识别、评价和管理等工作<br>三个主要目标：<br>（1）影响和促使形成变更的因素，变更对项目来说是有利的（如有新技术出现，减少硬件或软件的成本和时间）<br>（2）确定变更的发生（从项目状态报告中获得和证实）<br>（3）在实际的变更已发生或正在发生的时候对变更加以管理</p>
</li>
<li><p>理解整体变更控制过程和变更控制系统的组成</p>
</li>
<li><p>IT项目管理收尾阶段工作有哪些？<br>（1）IT项目审计<br>（2）IT项目验收<br>（3）IT项目后评价</p>
</li>
<li><p>项目审计主要任务有哪些？<br>判断项目是否合法、合理和有效，并且从中发现问题，纠正弊端，最终确认项目目标已经实现</p>
</li>
<li><p>理解IT项目验收的意义和组织。<br>项目验收意义<br>1、项目验收标志着项目的结束（或阶段性结束）<br>2、若项目顺利通过验收，项目的当事人就可以终止各自的义务和责任，从而获得相应的权益。同时，也意味着项目团队的全部或部分任务的完成，项目团队可以总结经验，接受新的项目任务；项目成员可以回到各自的工作岗位或被安排合适的工作<br>3、项目验收是保证合同任务完成，提高质量水平的最后关口<br>4、通过项目验收，整理档案资料，可为项目正常使用提供全面系统的技术文件、资料</p>
</li>
</ol>
<p>项目验收组织<br>项目验收组织是指对项目成果进行验收的组成人员及其组织，一般由项目接收方、项目团队和项目监理人员构成</p>
<ol start="9">
<li>理解项目后评价与前期评估的区别。</li>
</ol>
<p>后评价：<br>后评价是一个学习过程（总结经验教训）<br>后评价又是增强投资活动工作者责任心的重要手段<br>后评价主要为投资决策服务<br>后评价提供回顾、反思和总结项目工作的机会，采用定性和定量相结合的方法</p>
<p>后评价在项目完成之后，主要是对项目的总结；前期评估在项目初期，主要是对项目的预测<br>————————————————<br>版权声明：本文为CSDN博主「聆听–风雨」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/luchengtao11/article/details/72731026" target="_blank" rel="noopener">https://blog.csdn.net/luchengtao11/article/details/72731026</a></p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript面试</title>
    <url>/2020/07/13/JavaScript%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<h1 id="JavaScript面试"><a href="#JavaScript面试" class="headerlink" title="JavaScript面试"></a>JavaScript面试</h1><p>作者：luciferzero<br><a href="https://www.nowcoder.com/discuss/445566来源：牛客网" target="_blank" rel="noopener">https://www.nowcoder.com/discuss/445566来源：牛客网</a></p>
<ol>
<li><p>事件委托，怎么阻止事件冒泡          </p>
</li>
<li><p>怎么理解JS原型链          </p>
</li>
<li><p>怎么异步加载script脚本，defer和async的区别          </p>
</li>
<li><p>事件循环          </p>
</li>
<li><p>PureComponent          </p>
</li>
<li><p>高阶组件          </p>
</li>
<li><p>hooks          </p>
</li>
<li><p>你所了解的安全问题          </p>
</li>
<li><p>浏览器缓存          </p>
</li>
<li><p>HTTPS，SSL，TSL握手          </p>
</li>
<li><p>HTTP2.0</p>
</li>
</ol>
<p>​    </p>
<p> 1、           排序算法时间复杂度和稳定性比较     </p>
<p>2、           tcp/ip协议几层，http在哪一层     </p>
<p>3、           浏览器缓存     </p>
<p>4、           cookie、session、localstorage     </p>
<p>5、           settimeout、setinterval     </p>
<p> 6、         跨域 </p>
<p>7、          本地存储 </p>
<h2 id="js语法"><a href="#js语法" class="headerlink" title="js语法"></a>js语法</h2><h4 id="js基本类型"><a href="#js基本类型" class="headerlink" title="js基本类型"></a>js基本类型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">基本数据类型 ：String、Number、Boolean 、Null、Undefined、Symbol、BigInt ;</span><br><span class="line"></span><br><span class="line">引用数据类型：Object;</span><br><span class="line"></span><br><span class="line">其中 Symbol、BigInt 是新增的数据类型</span><br></pre></td></tr></table></figure>



<p>js原型链，原型链优势 </p>
<h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包:"></a>闭包:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">优点</span><br><span class="line"></span><br><span class="line">加强封装性,可以达到对变量的保护作用。</span><br><span class="line"></span><br><span class="line">缺点</span><br><span class="line"></span><br><span class="line">(1)  由于闭包内部变量优先级高于外部变量,所以多查找作用域链中的一个层次,就会在一定程度上影响查找速度。</span><br><span class="line"></span><br><span class="line">(2)  内存浪费,如下：</span><br><span class="line"></span><br><span class="line">闭包的特性</span><br><span class="line"></span><br><span class="line">    函数内再嵌套函数</span><br><span class="line">    内部函数可以引用外层的参数和变量</span><br><span class="line">    参数和变量不会被垃圾回收机制回收</span><br></pre></td></tr></table></figure>



<h4 id="有哪些方法判断变量的类型"><a href="#有哪些方法判断变量的类型" class="headerlink" title="有哪些方法判断变量的类型"></a>有哪些方法判断变量的类型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">基本数据类型用typeof类获取</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line"></span><br><span class="line">    var num&#x3D;9;</span><br><span class="line">    console.log(typeof num);</span><br><span class="line"></span><br><span class="line">结果为number类型</span><br><span class="line">复杂数据类型object（是否是Array、Date类的实例）</span><br><span class="line"></span><br><span class="line">    var aNum&#x3D;[1,3];</span><br><span class="line">    console.log(aNum instanceof Array);</span><br><span class="line"></span><br><span class="line">结果为true</span><br><span class="line">借用toString方法;</span><br><span class="line"></span><br><span class="line">    Object.prototype.toString.call(ObjectTest) &#x3D;&#x3D;&#x3D; &#39;[object Function]&#39;</span><br></pre></td></tr></table></figure>



<h4 id="循环语句有几种写法"><a href="#循环语句有几种写法" class="headerlink" title="循环语句有几种写法:"></a>循环语句有几种写法:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for - 循环代码块一定的次数</span><br><span class="line">for&#x2F;in - 循环遍历对象的属性</span><br><span class="line">while - 当指定的条件为 true 时循环指定的代码块</span><br><span class="line">while do 当指定的条件为 true 时循环指定的代码块</span><br><span class="line">forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数。</span><br></pre></td></tr></table></figure>

<p>字符串的截取的方法     </p>
<p>es6新增的数组的方法—     </p>
<p>遍历数组的方法     </p>
<p>说说forEach方法     </p>
<p>js:<br>1:闭包<br>2:垃圾回收机制<br>3:ajax的写法<br>4:处理跨域，同源策略，josnp<br>5:js的几种数据类型<br>6:js的几种数据类型的值<br>7:什么是堆，什么是栈<br>8:http状态码<br>9:判断一个对象是否是数组<br>10:简述箭头函数和普通函数的区别<br>11:一篇英文文章，找出它出现次数最多的前十个单词<br>12:一个字符串找出出现次数最多的字符<br>13:正则表达式如何匹配一个字符串是IP地址<br>14:事件捕获和冒泡<br>15:说一下你对原型与原型链的</p>
<h4 id="call或apply"><a href="#call或apply" class="headerlink" title="call或apply"></a><code>call</code>或<code>apply</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply最多有2个参数,第一个参数是借用对象,第二个参数是数组类型。</span><br><span class="line"></span><br><span class="line">call第一个参数为借用对象,后面的参数个数不限,都作为参数传递给被借用方法。</span><br><span class="line"></span><br><span class="line">call和apply的用途:</span><br><span class="line"></span><br><span class="line">    改变this指向</span><br><span class="line">    Function.prototype.bind</span><br><span class="line">    借用其他对象的方法</span><br><span class="line"></span><br><span class="line">call方法</span><br><span class="line"></span><br><span class="line">    function callFn () &#123;</span><br><span class="line">      let aArg &#x3D; Array.prototype.slice.call(arguments, 0, 3);</span><br><span class="line">      return aArg;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(callFn(&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;))</span><br><span class="line"></span><br><span class="line">输出结果：[ &#39;1&#39;, &#39;2&#39;, &#39;3&#39; ]</span><br><span class="line">apply方法</span><br><span class="line"></span><br><span class="line">    function applyFn () &#123;</span><br><span class="line">      let aArg &#x3D; Array.prototype.slice.apply(arguments, [0, 3]);</span><br><span class="line">      return aArg;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(applyFn(&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;))</span><br><span class="line"></span><br><span class="line">输出结果：[ &#39;1&#39;, &#39;2&#39;, &#39;3&#39; ]</span><br></pre></td></tr></table></figure>



<h4 id="JavaScript-的作用域与变量声明提升"><a href="#JavaScript-的作用域与变量声明提升" class="headerlink" title="JavaScript 的作用域与变量声明提升"></a>JavaScript 的作用域与变量声明提升</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">作用域</span><br><span class="line"></span><br><span class="line">    就是作用域里面套作用域；也就是闭包的机制；子集作用域可以访问父级作用域，父级不能访问子级；</span><br><span class="line"></span><br><span class="line">变量提升</span><br><span class="line"></span><br><span class="line">    作用域里面的带var的这些是该作用域的，如果没有某个变量直接到上一级查找；如果不在var声明，就直接变为上一级作用域的变量；</span><br><span class="line"></span><br><span class="line">javascript中一个名字(name)以四种方式进入作用域(scope)，其优先级顺序如下：</span><br><span class="line"></span><br><span class="line">    1、语言内置：所有的作用域中都有 this 和 arguments 关键字</span><br><span class="line">    2、形式参数：函数的参数在函数作用域中都是有效的</span><br><span class="line">    3、函数声明：形如function foo() &#123;&#125;</span><br><span class="line">    4、变量声明：形如var bar let aaa;</span><br></pre></td></tr></table></figure>



<h4 id="JavaScript原型，原型链-有什么特点"><a href="#JavaScript原型，原型链-有什么特点" class="headerlink" title="JavaScript原型，原型链 ? 有什么特点"></a>JavaScript原型，原型链 ? 有什么特点</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">函数的原型，每个函数都有一个原型；</span><br><span class="line">   在JavaScript中,一共有两种类型的值,原始值和对象值.每个对象都有一个内部属性 prototype,我们通常称之为原型.</span><br><span class="line">        原型的值可以是一个对象,也可以是null.</span><br><span class="line">        如果它的值是一个对象,则这个对象也一定有自己的原型.</span><br><span class="line">        这样就形成了一条线性的链,我们称之为原型链.</span><br><span class="line">        访问一个对象的原型可以使用Object.getPrototypeOf方法,或者__proto__属性.</span><br><span class="line">    	原型向上查找的过程属于原型链；</span><br><span class="line"></span><br><span class="line">特点</span><br><span class="line"></span><br><span class="line">可以向上查找，不能向下查找</span><br><span class="line">        我们没有办法遍历到所有以某个对象为原型的对象,但我们可以向上遍历,获取到一个对象所有的上层原型,这个原型链必定是线性的,尽头是null；</span><br><span class="line">    	原型链的作用是用来实现继承的；</span><br><span class="line">        原型链的作用是用来实现继承,比如我们新建一个数组,数组的方法就是从数组的原型上继承而来的.</span><br><span class="line">        虽然我们都说原型链,但实际上,在不考虑网页中frame的情况,js引擎在执行期间的某一时刻,所有存在的对象		组成的是一棵原型树.默认情况下,只有一棵树.根节点可以说是Object.prototype,也可以说是null.</span><br></pre></td></tr></table></figure>



<h2 id="算法题"><a href="#算法题" class="headerlink" title="算法题"></a>算法题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、可以传多个参数的函数</span><br><span class="line">function add(...value)&#123;</span><br><span class="line">				let sum&#x3D;0;</span><br><span class="line">				for(var val of value)&#123;</span><br><span class="line">					sum+&#x3D;val;</span><br><span class="line">				&#125;</span><br><span class="line">				return sum;</span><br><span class="line">			&#125;</span><br><span class="line">			console.log(add(2,5,3));</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2、获取点击的当前值</span><br><span class="line">    var oInputs &#x3D; document.getElementsByTagName(&#39;input&#39;);</span><br><span class="line">    for (let index &#x3D; 0; index &lt; oInputs.length; index++) &#123;</span><br><span class="line">      (function (index) &#123;</span><br><span class="line">        oInputs[index].onclick &#x3D; function () &#123;</span><br><span class="line">          alert(index + 1)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)(index)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3、动态创建表格</span><br><span class="line">    &lt;div id&#x3D;&#39;table11&#39;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      let row;</span><br><span class="line">      let cell;</span><br><span class="line">      for (let index &#x3D; 0; index &lt; 10; index++) &#123;</span><br><span class="line">        row &#x3D; document.createElement(&#39;tr&#39;);</span><br><span class="line">        document.getElementById(&#39;table11&#39;).appendChild(row);</span><br><span class="line">        for (let j &#x3D; 0; j &lt; 5; j++) &#123;</span><br><span class="line">          cell &#x3D; document.createElement(&#39;td&#39;);</span><br><span class="line">          cell.innerText &#x3D; &#39;内容&#39;;</span><br><span class="line">          row.appendChild(cell);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>CSS面试</title>
    <url>/2020/07/13/CSS%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<h1 id="CSS面试题"><a href="#CSS面试题" class="headerlink" title="CSS面试题"></a>CSS面试题</h1><h4 id="css盒模型"><a href="#css盒模型" class="headerlink" title="css盒模型 :"></a>css盒模型 :</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">内容+padding+border+margin这个说一遍，然后话风一转，说如果在移动端，这个盒子模型就不是很适合做开发了，最好用box-sizing: border-box;属性改变一下盒子模型；</span><br></pre></td></tr></table></figure>

<p>​    </p>
<h4 id="CSS3的Flexbox（弹性盒布局模型）"><a href="#CSS3的Flexbox（弹性盒布局模型）" class="headerlink" title="CSS3的Flexbox（弹性盒布局模型）:"></a>CSS3的Flexbox（弹性盒布局模型）:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以下6个属性设置在容器上（justify-content和align-items、flex-wrap:wrap最常用的）。</span><br><span class="line"></span><br><span class="line">    justify-content：定义了项目在主轴上的对齐方式。它可能取5个值</span><br><span class="line">        center： 居中</span><br><span class="line">        flex-start（默认值）：左对齐</span><br><span class="line">        flex-end：右对齐</span><br><span class="line">        space-between：两端对齐，项目之间的间隔都相等。</span><br><span class="line">        space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span><br><span class="line">    align-items：属性定义项目在交叉轴上如何对齐。它可能取5个值。</span><br><span class="line">        center：交叉轴的中点对齐。</span><br><span class="line">        flex-start：交叉轴的起点对齐。</span><br><span class="line">        flex-end：交叉轴的终点对齐。</span><br><span class="line">        baseline: 项目的第一行文字的基线对齐。</span><br><span class="line">        stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</span><br><span class="line">    flex-flow：flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</span><br><span class="line">    flex-direction：属性决定主轴的方向（即项目的排列方向）；</span><br><span class="line">        row（默认值）：主轴为水平方向，起点在左端。</span><br><span class="line">        row-reverse：主轴为水平方向，起点在右端。</span><br><span class="line">        column：主轴为垂直方向，起点在上沿。</span><br><span class="line">        column-reverse：主轴为垂直方向，起点在下沿。</span><br><span class="line">    flex-wrap：默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</span><br><span class="line">        它可能取三个值。</span><br><span class="line">        （1）nowrap（默认）：不换行。</span><br><span class="line">        （2）wrap：换行，第一行在上方。【这个属性经常用】</span><br><span class="line">        （3）wrap-reverse：换行，第一行在下方。</span><br><span class="line">    align-content：属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</span><br><span class="line">        flex-start：与交叉轴的起点对齐。</span><br><span class="line">        flex-end：与交叉轴的终点对齐。</span><br><span class="line">        center：与交叉轴的中点对齐。</span><br><span class="line">        space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span><br><span class="line">        space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span><br><span class="line">        stretch（默认值）：轴线占满整个交叉轴。</span><br></pre></td></tr></table></figure>



<h4 id="css选择器优先级"><a href="#css选择器优先级" class="headerlink" title="css选择器优先级 :"></a>css选择器优先级 :</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1）、优先级就近原则，样式定义最近者为准;</span><br><span class="line"></span><br><span class="line">(2）、载入样式以最后载入的定位为准;</span><br><span class="line"></span><br><span class="line">优先级为: 从样式选择器看权重优先级：important &gt; 内嵌样式 &gt; ID &gt; 类 &gt; 标签 | 伪类 | 属性选择 &gt; 伪对象 &gt; 继承 &gt; 通配符；</span><br><span class="line"></span><br><span class="line">应用规则：</span><br><span class="line">1、如果样式上加有!important标记</span><br><span class="line">2、匹配的内容按照CSS权重排序，权重大的优先</span><br><span class="line">3、如果权重也一样，按照它在CSS样式表里声明的顺序，后声明的优先</span><br><span class="line"></span><br><span class="line">important 比 内联优先级高，但内敛比id要高；</span><br><span class="line"></span><br><span class="line">CSS定义的权重</span><br><span class="line"></span><br><span class="line">    第一等：代表内联样式，如: style&#x3D;””，权值为1000。</span><br><span class="line">    第二等：代表ID选择器，如：#content，权值为100。</span><br><span class="line">    第三等：代表类，伪类和属性选择器，如.content，权值为10。</span><br><span class="line">    第四等：代表类型选择器和伪元素选择器，如div p，权值为1。</span><br><span class="line"></span><br><span class="line">最后把这些值加起来，再就是当前元素的权重了。</span><br></pre></td></tr></table></figure>



<h4 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器:"></a>css选择器:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id选择器（ # myid）</span><br><span class="line">类选择器（.myclassname）</span><br><span class="line">标签选择器（div, h1, p）</span><br><span class="line">相邻选择器（h1 + p）</span><br><span class="line">子选择器（ul &lt; li）</span><br><span class="line">后代选择器（li a）</span><br><span class="line">通配符选择器（ * ）</span><br><span class="line">属性选择器（a[rel &#x3D; ”external”]）</span><br><span class="line">伪类选择器（a: hover, li: nth - child）</span><br></pre></td></tr></table></figure>



<h4 id="css3特性"><a href="#css3特性" class="headerlink" title="css3特性:"></a>css3特性:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS3实现圆角（border-radius），阴影（box-shadow），</span><br><span class="line"></span><br><span class="line">对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）</span><br><span class="line"></span><br><span class="line">transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);&#x2F;&#x2F; 旋转,	</span><br><span class="line">缩放,定位,倾斜</span><br><span class="line"></span><br><span class="line">增加了更多的CSS选择器  多背景 rgba </span><br><span class="line"></span><br><span class="line">在CSS3中唯一引入的伪元素是 ::selection.</span><br><span class="line"></span><br><span class="line">媒体查询，多栏布局</span><br><span class="line"></span><br><span class="line">border-image</span><br></pre></td></tr></table></figure>



<h4 id="CSS旋转属性怎么用？transform-有哪些用法"><a href="#CSS旋转属性怎么用？transform-有哪些用法" class="headerlink" title="CSS旋转属性怎么用？transform 有哪些用法:"></a>CSS旋转属性怎么用？transform 有哪些用法:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一.旋转 rotate</span><br><span class="line">二.缩放 scale</span><br><span class="line">三.移动 translate</span><br><span class="line">四.倾斜 skew;</span><br><span class="line">五.基准点 transform-origin</span><br><span class="line"></span><br><span class="line">用法：transform: rotate(45deg) scale(0.5) skew(30deg, 30deg) translate(100px, 100px);</span><br></pre></td></tr></table></figure>



<h4 id="脱离文档流有两种方式，浮动和定位"><a href="#脱离文档流有两种方式，浮动和定位" class="headerlink" title="脱离文档流有两种方式，浮动和定位:"></a>脱离文档流有两种方式，浮动和定位:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一种:定位</span><br><span class="line"></span><br><span class="line">    position:absolute</span><br><span class="line">    position:fixed</span><br><span class="line"></span><br><span class="line">第二种:浮动</span><br><span class="line"></span><br><span class="line">float也脱离文档流；</span><br><span class="line"></span><br><span class="line">    float:left</span><br><span class="line">    float:right</span><br></pre></td></tr></table></figure>



<h4 id="css垂直居中"><a href="#css垂直居中" class="headerlink" title="css垂直居中  :"></a>css垂直居中  :</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方法一：宽高固定</span><br><span class="line"></span><br><span class="line">如果元素的宽高固定,那么,css指定样式为 top:50%;left:50%;</span><br><span class="line"></span><br><span class="line">而 margin-top 和 margin-left 指定为负数，绝对值为自身宽高的一半 ；</span><br><span class="line">方法二：有宽度</span><br><span class="line"></span><br><span class="line">可以使用margin:0 auto;可以实现居中（需要有宽度）</span><br><span class="line"></span><br><span class="line">    div&#123;</span><br><span class="line">        width:200px;</span><br><span class="line">        margin:0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">居中一个浮动元素</span><br><span class="line"></span><br><span class="line">如何居中一个浮动元素？父元素和子元素同时左浮动，然后父元素相对左移动50%，再然后子元素相对右移动50%，或者子元素相对左移动-50%也就可以了。</span><br><span class="line"></span><br><span class="line">具体就是确定容器的宽高 宽500 高 300 的层,设置层的外边距</span><br><span class="line"></span><br><span class="line">    .div &#123;</span><br><span class="line">      width:500px ; height:300px;&#x2F;&#x2F;高度可以不设</span><br><span class="line">      margin: -150px 0 0 -250px;</span><br><span class="line">      position:relative;         &#x2F;&#x2F;相对定位</span><br><span class="line">      background-color:pink;     &#x2F;&#x2F;方便看效果</span><br><span class="line">      left:50%;</span><br><span class="line">      top:50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">让绝对定位的div居中</span><br><span class="line"></span><br><span class="line">如何让绝对定位的div居中？</span><br><span class="line"></span><br><span class="line">先把外层的相对定位的大div用margin:0px auto;居中，</span><br><span class="line"></span><br><span class="line">然后这个绝对定位的用left，top来定位。</span><br><span class="line"></span><br><span class="line">top属性值:（父元素的高度-子元素高度）&#x2F;2；</span><br><span class="line"></span><br><span class="line">left属性值:（父元素宽度值-子元素宽度值）&#x2F;2。</span><br><span class="line"></span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 1200px;</span><br><span class="line">    background: none;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    right: 0;</span><br></pre></td></tr></table></figure>



<h4 id="三栏布局，中间自适应"><a href="#三栏布局，中间自适应" class="headerlink" title="三栏布局，中间自适应:"></a>三栏布局，中间自适应:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、绝对定位法</span><br><span class="line"></span><br><span class="line">这或许是三种方法里最直观，最容易理解的：左右两栏采用绝对定位，分别固定于页面的左右两侧，</span><br><span class="line"></span><br><span class="line">中间的主体栏用左右margin值撑开距离。于是实现了三栏自适应布局。</span><br><span class="line"></span><br><span class="line">2、自身浮动法</span><br><span class="line"></span><br><span class="line">此方法代码最简单。应用了标签浮动跟随的特性。左栏左浮动，右栏右浮动，主体直接放后面，就实现了自适应。</span><br><span class="line"></span><br><span class="line">3、margin负值法</span><br><span class="line"></span><br><span class="line">这种方法是在实际的网站中应用的最多的，我个人感觉多少有些跟风的嫌疑。此方法很难用一句话概括。首先，中间的主体要使用双层标签。</span><br><span class="line"></span><br><span class="line">外层div宽度100%显示，并且浮动（本例左浮动，下面所述依次为基础），内层div为真正的主体内容，含有左右210像素的margin值。</span><br><span class="line"></span><br><span class="line">左栏与右栏都是采用margin负值定位的，左栏左浮动，margin-left为-100%，由于前面的div宽度100%与浏览器，所以这里的-100%margin值正好使左栏div定位到了页面的左侧； 右侧栏也是左浮动，其margin-left也是负值，大小为其本身的宽度即200像素。</span><br></pre></td></tr></table></figure>



<h4 id="CSS-中用于隐藏元素的两个属性"><a href="#CSS-中用于隐藏元素的两个属性" class="headerlink" title="CSS 中用于隐藏元素的两个属性:"></a>CSS 中用于隐藏元素的两个属性:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">目前，我所知道的不同有三点（欢迎补充）：空间占据、回流与渲染、株连性</span><br><span class="line"></span><br><span class="line">display:none；隐藏后的元素不占据任何空间，有株连性，父级设置none，子元素就显示不出来了，回引起渲染与回流，影响性能。</span><br><span class="line"></span><br><span class="line">visibility:hidden；隐藏的元素空间依旧存在；伪株连性，父级设计hidden，子元素默认不现实，但是可以用过visibility:visible 显示出子元素，无渲染与回流。</span><br></pre></td></tr></table></figure>



<h4 id="position属性"><a href="#position属性" class="headerlink" title="position属性  :"></a>position属性  :</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">默认：static</span><br><span class="line"></span><br><span class="line">相对定位：relative</span><br><span class="line"></span><br><span class="line">绝对定位：absolute（注意&#96;z-index&#96;）</span><br><span class="line"></span><br><span class="line">固定定位：fixed</span><br></pre></td></tr></table></figure>



<h4 id="display-显示状态有"><a href="#display-显示状态有" class="headerlink" title="display 显示状态有:"></a>display 显示状态有:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">none  隐藏，此元素不会被显示。</span><br><span class="line"></span><br><span class="line">block 块显示；此元素将显示为块级元素，此元素前后会带有换行符。</span><br><span class="line"></span><br><span class="line">inline 内嵌 ，默认。此元素会被显示为内联元素，元素前后没有换行符。</span><br><span class="line"></span><br><span class="line">table 表格显示，此元素会作为块级表格来显示（类似 &lt;table&gt;），表格前后带有换行符。</span><br><span class="line"></span><br><span class="line">inline-block：元素既具有 block 元素可以设置宽高的特性，同时又具有 inline 元素默认不换行的特性。</span><br><span class="line"></span><br><span class="line">list-item:象块类型元素一样显示，并添加样式列表标记。</span><br><span class="line"></span><br><span class="line">inherit 规定应该从父元素继承 display 属性的值</span><br></pre></td></tr></table></figure>



<h4 id="margin的上下左右四个数值？什么原理？"><a href="#margin的上下左右四个数值？什么原理？" class="headerlink" title="margin的上下左右四个数值？什么原理？"></a>margin的上下左右四个数值？什么原理？</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">margin属性的四个值，总是按照上，右，下，左的顺序</span><br><span class="line"></span><br><span class="line">如果有三个值，那左右相同（左取的是第二个值）</span><br><span class="line"></span><br><span class="line">如果有两个值，那上下相同，左右相同（下取上，左取右）</span><br><span class="line"></span><br><span class="line">如果有一个值，那四面相同（右取上，下取上，右取左）</span><br></pre></td></tr></table></figure>



<h4 id="浮动对父级元素产生什么影响及清除浮动-："><a href="#浮动对父级元素产生什么影响及清除浮动-：" class="headerlink" title="浮动对父级元素产生什么影响及清除浮动 ："></a>浮动对父级元素产生什么影响及清除浮动 ：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浮动元素引起的问题</span><br><span class="line"></span><br><span class="line">    父元素的高度无法被撑开，影响与父元素同级的元素</span><br><span class="line">    与浮动元素同级的非浮动元素会跟随其后</span><br><span class="line">    若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构</span><br><span class="line"></span><br><span class="line">清除浮动的几种方法</span><br><span class="line">1、额外标签法</span><br><span class="line"></span><br><span class="line">&lt;div style&#x3D;&quot;clear:both;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">缺点：不过这个办法会增加额外的标签使HTML结构看起来不够简洁。</span><br><span class="line"></span><br><span class="line">2、使用after伪元素</span><br><span class="line"></span><br><span class="line">    #parent:after&#123;</span><br><span class="line">        content : &quot;.&quot;;</span><br><span class="line">        height : 0;</span><br><span class="line">        visibility : hidden;</span><br><span class="line">        display : block;</span><br><span class="line">        clear : both;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">3、父元素也设置浮动</span><br><span class="line">缺点：使得与父元素相邻的元素的布局会受到影响，不可能一直浮动到body，不推荐使用 </span><br><span class="line"></span><br><span class="line">4、设置 overflow 为 hidden 或者 auto</span><br></pre></td></tr></table></figure>



<h4 id="多行文本溢出省略—"><a href="#多行文本溢出省略—" class="headerlink" title="多行文本溢出省略—"></a>多行文本溢出省略—</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">单行文本的溢出显示省略号</span><br><span class="line">overflow: hidden;</span><br><span class="line">text-overflow:ellipsis;</span><br><span class="line">white-space: nowrap;</span><br><span class="line"></span><br><span class="line">多行文本的溢出显示省略号</span><br><span class="line">display: -webkit-box;</span><br><span class="line">-webkit-box-orient: vertical;</span><br><span class="line">-webkit-line-clamp: 3;&#x2F;&#x2F;这里是第几行有省略号</span><br><span class="line">overflow: hidden;</span><br></pre></td></tr></table></figure>



<h4 id="块级元素-行内元素-行内块元素："><a href="#块级元素-行内元素-行内块元素：" class="headerlink" title="块级元素 行内元素 行内块元素："></a>块级元素 行内元素 行内块元素：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">块级元素有以下特点：</span><br><span class="line"></span><br><span class="line">    每个块级元素都是独自占一行。 </span><br><span class="line">    元素的高度、宽度、行高和边距都是可以设置的。　　 </span><br><span class="line">    元素的宽度如果不设置的话，默认为父元素的宽度（父元素宽度100%）。</span><br><span class="line">    如：h1~h6、ul、ol、div、table等等</span><br><span class="line"></span><br><span class="line">行内元素有以下特点： </span><br><span class="line"></span><br><span class="line">    每一个行内元素可以和别的行内元素共享一行，相邻的行内元素会排列在同一行里，直到一行排不下了，才会换行。 </span><br><span class="line">    行内元素的高度、宽度、行高及顶部和底部边距不可设置。 </span><br><span class="line">    元素的宽度就是它包含的文字或图片的宽度，不可改变。</span><br><span class="line">    如：a、i、img、input、p等等</span><br><span class="line"></span><br><span class="line">行内块具体特点如下：</span><br><span class="line"></span><br><span class="line">    和其他行内或行内块级元素元素放置在同一行上；</span><br><span class="line">    元素的高度、宽度、行高以及顶和底边距都可设置。</span><br><span class="line">    如：input img</span><br><span class="line"></span><br><span class="line">元素类型转换display</span><br><span class="line"></span><br><span class="line">display：block ，定义元素为块级元素</span><br><span class="line"></span><br><span class="line">display :  inline ，定义元素为行内元素</span><br><span class="line"></span><br><span class="line">display：inline-block，定义元素为行内块级元素。</span><br></pre></td></tr></table></figure>



<h4 id="css如何画一个三角形"><a href="#css如何画一个三角形" class="headerlink" title="css如何画一个三角形:"></a>css如何画一个三角形:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">width: 0;</span><br><span class="line">height: 0;</span><br><span class="line">border-top:50px solid transparent;</span><br><span class="line">border-left: 50px solid transparent;</span><br><span class="line">border-right: 50px solid transparent;</span><br><span class="line">border-bottom: 50px solid red;</span><br></pre></td></tr></table></figure>



<p>:页面性能如何优化，合并图片，减少网络的请求</p>
<p>:雪碧图如何使用</p>
]]></content>
  </entry>
  <entry>
    <title>IT项目期末复习</title>
    <url>/2020/07/10/IT%E9%A1%B9%E7%9B%AE%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="一、简答题类型"><a href="#一、简答题类型" class="headerlink" title="一、简答题类型"></a>一、简答题类型</h3><p>1．（3分）IT项目的利益相关者有哪些？<br>答：政府，投资方，债权人，客户，员工，供应商</p>
<p>2.（3分）国际上主要的项目管理知识体系的两大认证书是什么？<br>答：认证PMP证书和认证IPMP证书。</p>
<p>3.（3分）目标必须符合SMART原则的含义是：（3分）<br>答：明确、可行、具体和可以度量。</p>
<p>4.（3分）IT项目成本管理由哪些过程组成？（3分）<br>答： 资源计划、成本估算、成本预算、成本控制、工作总结。</p>
<p>（3分）什么是成本估算和成本预算？<br>答：成本估算：计算完成项目所需各种资源成本的近似值<br>成本预算：包括分配给每一独立工作的全部费用，以获得度量项目执行的费用</p>
<h3 id="二、选择题类型"><a href="#二、选择题类型" class="headerlink" title="二、选择题类型"></a>二、选择题类型</h3><p>   1.下面那一项不是主要属于项目管理基本特性？（   D  ）<br>        A. 明确的目标<br>        B. 独特性<br>        C. 时限性<br>        D. 人员休息</p>
<ol start="2">
<li><p>IT项目涉及的因素较多，管理也较复杂，但不表现在以下那个方面。（  C ）<br>A．目标的渐进性<br>B．创新性<br>C．风险无法评估性<br>D．智力密集型</p>
<ol start="3">
<li>下面那一项不属于对IT项目环境的影响？（ D  ）<br>A．经济环境对IT项目的影响<br>B．社会人文、政策法律对IT项目的影响<br>C．企业文化对IT项目的影响<br>D. 项目启动前，辞职人员对IT项目环境的影响</li>
</ol>
</li>
<li><p>项目立项启动准备过程，下面那个制度不在项目管理制度之列？（ C  ）<br>A. 项目考核管理制度<br>B. 项目费用管理制度和项目例会管理制度<br>C. 交通管理制度?<br>D. 项目通报制度。</p>
</li>
<li><p>下面那一项不属于编制范围规划的依据？（ B  ）<br>A. 环境因素和组织过程资产<br>B. 退休人员管理<br>C. 项目章程<br>D. 项目初步范围说明书</p>
</li>
<li><p>下列哪项不属于IT项目时间管理的特点？（  C ）<br>A. 时间管理是一个动态过程<br>B. 项目进度计划和控制是一个复杂的系统工程<br>C. 库房里的设备管理制度<br>D. 时间管理风险性大和时间管理有明显的阶段性</p>
</li>
<li><p>下面那一条不属于IT项目成本特点？（  C ）<br>A. 人工成本高，维护成本高且较难确定<br>B. 直接成本低，间接成本高。<br>C. 使用一般设备<br>D. 成本变动频繁，风险成本高。</p>
</li>
<li><p>常见的IT项目质量问题不包含下面那一条？（  D  ）<br> A. 违背IT项目规律<br> B. 技术方案本身的缺陷<br> C. 基本部件不合格, 实施中的管理问题<br> D. 个别人员离职<br> 9.IT项目的人力资源管理不包括下面那一条？（  A ）<br> A．人员设备的适当配置<br> B．项目组织规划和人员的获得与配备<br> C．项目组织成员的开发<br> D．项目团队建设与管理</p>
<p>10.项目沟通的准则不包含下面那一条？（  D ）<br>准确和及时<br>?  B. 完整<br>?  C. 有效<br>正在实施</p>
</li>
</ol>
<h3 id="三、填空题类型"><a href="#三、填空题类型" class="headerlink" title="三、填空题类型"></a>三、填空题类型</h3><ol>
<li><p>PMBOK把项目管理过程组分为<strong><em>5__</em></strong>类。</p>
</li>
<li><p>项目生命周期中的重要概念包括：  检查点和<strong><strong><em>里程碑___</em></strong></strong>。</p>
</li>
<li><p>项目可行性研究的主要内容包括：<br>技术可行性分析、经济可行性、运行环境可行性和__    可行性研究报告<strong>_____</strong>。</p>
<h6 id="4、IT项目范围变更控制的作用包括：合理调整项目范围、纠偏行动和"><a href="#4、IT项目范围变更控制的作用包括：合理调整项目范围、纠偏行动和" class="headerlink" title="4、IT项目范围变更控制的作用包括：合理调整项目范围、纠偏行动和"></a>4、IT项目范围变更控制的作用包括：合理调整项目范围、纠偏行动和</h6><p>​    <strong><em>总结经验教训_____</em></strong>。</p>
</li>
<li><p>IT项目资源分类包括：项目环境资源、可重用资源和<strong><strong>人力资源__</strong></strong><br> <strong><strong>__</strong></strong>。</p>
</li>
</ol>
<h3 id="四、判断题类型"><a href="#四、判断题类型" class="headerlink" title="四、判断题类型"></a>四、判断题类型</h3><p>1.项目计划管理制度：明确各级项目计划的制订、检查流程，如整体计划、阶段计划、周计划。（ √ ）</p>
<ol start="2">
<li>收集项目需求主要包含（ √ ）<br>（1）收集需求的依据<br>（2）收集需求的工具与技术</li>
<li>项目进度安排只是分析计划活动顺序、但不分析计划活动持续时间、资源要求和进度制约因素，不制订项目进度表的过程。（× ）</li>
<li>IT项目成本特点：（×  ）<br>（1）人工成本不高。<br>（2）直接成本高，间接成本低。<br>（3）维护成本低且较容易确定。<br>（4）成本变动不大，风险成本低。</li>
<li>质量是反映实体（产品、过程或活动等）满足明确和隐含的需要能力及特性的总和。（  √）</li>
<li>有效沟通的原则是：（ √ ）<br>（1）尽早沟通<br>（2）主动沟通<br>（3）内外有别<br>（4）采用对方能接受的沟通风格<br>（5）沟通升级原则</li>
<li>风险是指在一定条件下和一定时期内可能发生的各种结果的变化程度。（ √ ）</li>
<li>IT项目的采购必须满足两个基本要求。（ √  ）<br>（1）符合技术与质量要求。<br>（2）经济性。</li>
</ol>
<h3 id="五、问答题类型"><a href="#五、问答题类型" class="headerlink" title="五、问答题类型"></a>五、问答题类型</h3><p>1．信息技术是以什么为基础进行开发的项目，如电子商务、企业信息化、数字城市、物联网应用等等。它本身是           项目，具备一般项目的基本特征。<br>    答：计算机、通讯、网络、微电子等</p>
<p>2.IT项目的调研方法有哪些？<br>答：现有及历史资料收集、调查问卷、用户访问、实地考察、委托专业公司、专家咨询等。</p>
<p>3.WBS的设计方法有哪几种？<br>    答：类比法、自上而下法、自下而上法</p>
<ol start="4">
<li>IT项目成本管理由哪些过程组成？<br>答：资源计划、成本估算、成本预算、成本控制、工作总结</li>
</ol>
<p>5.项目的质量责任有哪些？<br>答：项目经理对项目的质量负责。<br>       执行任务的具体员工负根本责任。</p>
<ol start="6">
<li>CMM有哪五个等级？<br>答：初始级 、可重复级、已定义级 、已管理级、优化级</li>
</ol>
<h3 id="六、论述题类型"><a href="#六、论述题类型" class="headerlink" title="六、论述题类型"></a>六、论述题类型</h3><p>1.解释项目沟通管理过程的单向沟通与双向沟通<br>答：<br>单向沟通是指发送者和接受者两者之间的地位不变（单向传递），一方只发送信息，另一方只接受信息。<br>双向沟通中，发送者和接受者两者之间的位置不断交换，且发送者是以协商和讨论的姿态面对接受者，信息发出以后还需及时听取反馈意见，必要时双方可进行多次重复商谈，直到双方共同</p>
<p>明确和满意为止。</p>
<p>2.谈谈项目风险管理过程与作用。<br>答：有效的风险管理可以提高项目的成功率。<br>?  提前对风险制定对策，就可以在风险发生时迅速做出反应，避免忙中出错造成更大损失。<br>风险管理可以增加团队的健壮性。<br>?  有效的风险管理可以帮助项目经理抓住工作重点，将主要精力集中于重大风险，将工作方式从被动救火转变为主动防范。</p>
<p>一、名词解释<br>1．答：政府，投资方，债权人，客户，员工，供应商<br>2. 答：认证PMP证书和认证IPMP证书。<br>3. 答：明确、可行、具体和可以度量。<br>4. 答：资源计划、成本估算、成本预算、成本控制、工作总结。<br>5. 答：成本估算：计算完成项目所需各种资源成本的近似值<br>成本预算：包括分配给每一独立工作的全部费用，以获得度量项目执行的费用</p>
<p>二、选择题<br>1．（D）、  2．（C）、 3．（D）4.（C） 5.（B） 6.（C） 7.（C） 8.（D）9.（A） 10.（D）<br>三、填空题<br>1．5  2. 里程碑 3. 可行性研究报告 4. 总结经验教训 5. 人力资源<br>四、判断题（要求：正确打√，错误打×）（本题共8小题，每小题1分，共8分）<br>1．（√）、 2．（√）、 3．（×）、 4．（×）5.（√）6. （√）7.（√）8. （√）<br>五、问答题<br>1．（6分）<br>答：计算机、通讯、网络、微电子等<br>2.（7分）<br>答：现有及历史资料收集、调查问卷、用户访问、实地考察、委托专业公司、专家咨询等。<br>3.（7分）<br>答：类比法、自上而下法、自下而上法<br>4.（7分）<br>答：资源计划、成本估算、成本预算、成本控制、工作总结</p>
<p>5.（6分）<br>答：项目经理对项目的质量负责。<br>执行任务的具体员工负根本责任。<br>（4分）<br>答：初始级 、可重复级、已定义级 、已管理级、优化级</p>
<p>六、论述题<br>1．（6分）<br>解：单向沟通是指发送者和接受者两者之间的地位不变（单向传递），一方只发送信息，另一方只接受信息。<br>双向沟通中，发送者和接受者两者之间的位置不断交换，且发送者是以协商和讨论的姿态面对接受者，信息发出以后还需及时听取反馈意见，必要时双方可进行多次重复商谈，直到双方共同</p>
<p>明确和满意为止。</p>
<p>2．（12分）<br>解：有效的风险管理可以提高项目的成功率。<br>?  提前对风险制定对策，就可以在风险发生时迅速做出反应，避免忙中出错造成更大损失。<br>风险管理可以增加团队的健壮性。<br>?  有效的风险管理可以帮助项目经理抓住工作重点，将主要精力集中于重大风险，将工作方式从被动救火转变为主动防范。</p>
]]></content>
  </entry>
  <entry>
    <title>软件测试技术期末复习资源</title>
    <url>/2020/07/11/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<h4 id="1、逻辑覆盖6种方法的定义（重点内容）"><a href="#1、逻辑覆盖6种方法的定义（重点内容）" class="headerlink" title="1、逻辑覆盖6种方法的定义（重点内容）"></a>1、逻辑覆盖6种方法的定义（重点内容）</h4><p>语句覆盖：设计足够多的测试用例，使得测试程序中的每条可执行语句至少被执行一次。</p>
<p>判定覆盖：设计足够多的测试用例，使得测试程序中的每个判断的真假都执行一次。</p>
<p>条件覆盖：设计足够多的测试用例，使得测试程序中的每个判断语句中的每个逻辑条件的可能值至少被执行一次。</p>
<p>判定/条件覆盖：设计足够多的测试用例，使得测试程序中的每个判断本身的判定结果至少满足一次，同时，每个                            逻辑条件的可能值也至少被满足一次。</p>
<p>条件组合覆盖：设计足够多的测试用例，使得测试程序中的每个判断的所有可能条件组合至少被满足一次。</p>
<p>路径覆盖：设计足够多的测试用例，使得测试程序中的每条路径至少被覆盖一次。</p>
<h4 id="2、逻辑覆盖有哪6种方法（重点内容）"><a href="#2、逻辑覆盖有哪6种方法（重点内容）" class="headerlink" title="2、逻辑覆盖有哪6种方法（重点内容）"></a>2、逻辑覆盖有哪6种方法（重点内容）</h4><p>语句覆盖、判定覆盖、条件覆盖、判定/条件覆盖、条件组合覆盖、路径覆盖</p>
<h4 id="3、6种覆盖方法之间的关系（比如：满足某个覆盖标准，是否一定能满足其他覆盖的标准）"><a href="#3、6种覆盖方法之间的关系（比如：满足某个覆盖标准，是否一定能满足其他覆盖的标准）" class="headerlink" title="3、6种覆盖方法之间的关系（比如：满足某个覆盖标准，是否一定能满足其他覆盖的标准）"></a>3、6种覆盖方法之间的关系（比如：满足某个覆盖标准，是否一定能满足其他覆盖的标准）</h4><p>1：满足判定覆盖就一定满足语句覆盖，反之则不然。</p>
<p>2：满足条件覆盖不一定满足判定覆盖和语句覆盖。</p>
<p>3：满足判定/条件覆盖就一定满足条件覆盖和语句覆盖和判断覆盖</p>
<p>4：满足条件组合覆盖就一定满足条件覆盖和判定覆盖</p>
<p>5：满足路径覆盖不一定满足条件覆盖，但一定满足判定覆盖</p>
<h4 id="4、6中覆盖方法的测试用例表要会画"><a href="#4、6中覆盖方法的测试用例表要会画" class="headerlink" title="4、6中覆盖方法的测试用例表要会画"></a>4、6中覆盖方法的测试用例表要会画</h4><h4 id="5、要会画流程控制图（重点内容）"><a href="#5、要会画流程控制图（重点内容）" class="headerlink" title="5、要会画流程控制图（重点内容）"></a>5、要会画流程控制图（重点内容）</h4><h4 id="6、记住软件测试人员需要具备的素质（重点内容必须记住）"><a href="#6、记住软件测试人员需要具备的素质（重点内容必须记住）" class="headerlink" title="6、记住软件测试人员需要具备的素质（重点内容必须记住）"></a>6、记住软件测试人员需要具备的素质（重点内容必须记住）</h4><p>良好的沟通能力，掌握比较全面的技术，充分的自信心、足够耐心和责任心，要具备怀疑精神和学习能力，超强的记忆力和良好的洞察力。</p>
<h4 id="7、了解云计算与软件测试内容"><a href="#7、了解云计算与软件测试内容" class="headerlink" title="7、了解云计算与软件测试内容"></a>7、了解云计算与软件测试内容</h4><p>云计算是网络计算、分布计算、并行计算、效用计算、网络存储等传统计算机技术和网络技术发展的产物</p>
<h4 id="8、软件测试前沿技术有哪些"><a href="#8、软件测试前沿技术有哪些" class="headerlink" title="8、软件测试前沿技术有哪些"></a>8、软件测试前沿技术有哪些</h4><p>1、敏捷测试方法；         2测试驱动开发     </p>
<h4 id="9、影响软件测试费用的因素"><a href="#9、影响软件测试费用的因素" class="headerlink" title="9、影响软件测试费用的因素"></a>9、影响软件测试费用的因素</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、软件的功能</span><br><span class="line"></span><br><span class="line">2、目标用户的数量</span><br><span class="line"></span><br><span class="line">3、潜在缺陷造成的影响</span><br><span class="line"></span><br><span class="line">4、开发机构的业务能力</span><br><span class="line"></span><br><span class="line">5、测试的时机</span><br></pre></td></tr></table></figure>



<h4 id="10、软件测试与开发的完整流程图（重点内容必须会画）"><a href="#10、软件测试与开发的完整流程图（重点内容必须会画）" class="headerlink" title="10、软件测试与开发的完整流程图（重点内容必须会画）"></a>10、软件测试与开发的完整流程图（重点内容必须会画）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">需求分析						验收测试</span><br><span class="line">	概要设计				系统测试</span><br><span class="line">		详细设计		集成测试</span><br><span class="line">			编码		单元测试</span><br></pre></td></tr></table></figure>



<h4 id="11、测试环境的维护与管理"><a href="#11、测试环境的维护与管理" class="headerlink" title="11、测试环境的维护与管理"></a>11、测试环境的维护与管理</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、设置专们的测试环境管理角色</span><br><span class="line">2、明确测试环境管理所需的各种文档</span><br><span class="line">3、测试环境访问权限的管理</span><br><span class="line">4、测试环境的变更管理</span><br><span class="line">5、测试环境的备份和恢复</span><br></pre></td></tr></table></figure>



<h4 id="12、软件测试的复杂性"><a href="#12、软件测试的复杂性" class="headerlink" title="12、软件测试的复杂性"></a>12、软件测试的复杂性</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、不可能对程序实现完全测试</span><br><span class="line">2、杀虫剂现象</span><br><span class="line">3、软件测试的代价</span><br></pre></td></tr></table></figure>



<h4 id="13、测试用例（重点内容）"><a href="#13、测试用例（重点内容）" class="headerlink" title="13、测试用例（重点内容）"></a>13、测试用例（重点内容）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">定义：测试用例时为了某个目标而编制的一组测试输入、执行添加以及预期结果，以便测试某个程序路径或核实是否满足某个特定需求。</span><br></pre></td></tr></table></figure>



<h4 id="14、软件测试的分类（超重点内容，各种测试的别名都需要记住，按照什么分类，某分类分为哪几种；比如：按照软件测试方式分类，分为静态测试和动态测试两类）"><a href="#14、软件测试的分类（超重点内容，各种测试的别名都需要记住，按照什么分类，某分类分为哪几种；比如：按照软件测试方式分类，分为静态测试和动态测试两类）" class="headerlink" title="14、软件测试的分类（超重点内容，各种测试的别名都需要记住，按照什么分类，某分类分为哪几种；比如：按照软件测试方式分类，分为静态测试和动态测试两类）"></a>14、软件测试的分类（超重点内容，各种测试的别名都需要记住，按照什么分类，某分类分为哪几种；比如：按照软件测试方式分类，分为静态测试和动态测试两类）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按照测试内容分类：</span><br><span class="line">	1、功能性测试</span><br><span class="line">	2、可靠性测试</span><br><span class="line">	3、易用性测试</span><br><span class="line">	4、效率测试</span><br><span class="line">	5、可移植性测试</span><br><span class="line">	6、文档测试</span><br><span class="line">	</span><br><span class="line">按照生命周期分类：</span><br><span class="line">	1、单元测试(模块测试)</span><br><span class="line">	2、集成测试(组装测试)</span><br><span class="line">	3、确认测试(有效性测试)</span><br><span class="line">	4、系统测试</span><br><span class="line">	5、验收测试</span><br><span class="line">	</span><br><span class="line">按照测试方式分类：</span><br><span class="line">	1、静态测试</span><br><span class="line">	2、动态测试</span><br></pre></td></tr></table></figure>



<h4 id="15、软件测试过程模型（主要记有哪几个以及区分软件开发过程模型和软件测试过程模型）"><a href="#15、软件测试过程模型（主要记有哪几个以及区分软件开发过程模型和软件测试过程模型）" class="headerlink" title="15、软件测试过程模型（主要记有哪几个以及区分软件开发过程模型和软件测试过程模型）"></a>15、软件测试过程模型（主要记有哪几个以及区分软件开发过程模型和软件测试过程模型）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、V模型</span><br><span class="line">2、W模型</span><br><span class="line">3、X模型</span><br><span class="line">4、H模型</span><br><span class="line">5、前置模型</span><br></pre></td></tr></table></figure>



<h4 id="16、软件、软件工程、软件质量、软件测试的定义（着重记住软件测试定义）"><a href="#16、软件、软件工程、软件质量、软件测试的定义（着重记住软件测试定义）" class="headerlink" title="16、软件、软件工程、软件质量、软件测试的定义（着重记住软件测试定义）"></a>16、软件、软件工程、软件质量、软件测试的定义（着重记住软件测试定义）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">软件测试的定义：测试是为发现错误而执行程序的过程</span><br><span class="line">软件的定义：是计算机系统中与硬件相依存的另一个部分，它是程序、数据及其相关的完整集合</span><br><span class="line">软件工程的定义：应用计算机科学、数学以及管理学科等原理开发软件的工程</span><br><span class="line">软件质量的定义：软件与明确的和隐含的定义的需求相一致的程度</span><br></pre></td></tr></table></figure>



<h4 id="17、独立路径测试例题（超重点，三个步骤一定要会，流程图，控制流图，环形复杂度，独立路径集合，测试用例表）"><a href="#17、独立路径测试例题（超重点，三个步骤一定要会，流程图，控制流图，环形复杂度，独立路径集合，测试用例表）" class="headerlink" title="17、独立路径测试例题（超重点，三个步骤一定要会，流程图，控制流图，环形复杂度，独立路径集合，测试用例表）"></a>17、独立路径测试例题（超重点，三个步骤一定要会，流程图，控制流图，环形复杂度，独立路径集合，测试用例表）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">三个步骤：</span><br><span class="line">	1、导出程序控制流图</span><br><span class="line">	2、求出程序环形复杂度</span><br><span class="line">	3、设计测试用例</span><br><span class="line">	</span><br><span class="line">求环形复杂度的公示：</span><br><span class="line">	1、V(G)&#x3D;E-N+2(E是边的数目；N是结点数目)</span><br><span class="line">	2、V(G)&#x3D;P+1(P是判定结点的数目)</span><br><span class="line">	3、V(G)&#x3D;A(A是区域的数目)</span><br></pre></td></tr></table></figure>



<p><img src="G:%5Cvue.cli%5CButterfly%5Csource_posts%5C15.2%E7%8B%AC%E7%AB%8B%E8%B7%AF%E5%BE%84%E6%B5%8B%E8%AF%95%E4%BE%8B%E9%A2%98.png" alt="15.2独立路径测试例题"></p>
]]></content>
  </entry>
</search>
